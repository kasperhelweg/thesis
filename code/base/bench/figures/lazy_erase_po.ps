%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./figures/lazy_erase_po.ps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Wed Jun  4 16:48:26 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./figures/lazy_erase_po.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (kasper)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  4 16:48:26 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 0.1) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 1001 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.2) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 1554 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.3) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 2107 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.4) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 2660 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.5) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 3212 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.6) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 3765 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.7) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 4318 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.8) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 4871 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.9) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 448 M
0 63 V
0 4360 R
0 -63 V
686 308 M
( 1000) Cshow
1.000 UL
LTb
LCb setrgbcolor
1157 448 M
0 31 V
0 4392 R
0 -31 V
1780 448 M
0 31 V
0 4392 R
0 -31 V
2100 448 M
0 31 V
0 4392 R
0 -31 V
2251 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 10000) Cshow
1.000 UL
LTb
LCb setrgbcolor
2722 448 M
0 31 V
0 4392 R
0 -31 V
3345 448 M
0 31 V
0 4392 R
0 -31 V
3665 448 M
0 31 V
0 4392 R
0 -31 V
3817 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 100000) Cshow
1.000 UL
LTb
LCb setrgbcolor
4288 448 M
0 31 V
0 4392 R
0 -31 V
4911 448 M
0 31 V
0 4392 R
0 -31 V
5230 448 M
0 31 V
0 4392 R
0 -31 V
5382 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 1e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
5853 448 M
0 31 V
0 4392 R
0 -31 V
6476 448 M
0 31 V
0 4392 R
0 -31 V
6795 448 M
0 31 V
0 4392 R
0 -31 V
6947 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 1e+07) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
686 4871 N
686 448 L
6261 0 V
0 4423 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 M
(time in micro-seconds per. operation) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(number of elements) Cshow
LTb
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.500 UP
1.000 UL
LT0
0.50 0.50 0.00 C LCb setrgbcolor
6328 861 M
(Lazy Binary Queue - Vector) Rshow
LT0
0.50 0.50 0.00 C 6412 861 M
367 0 V
686 4522 M
751 795 L
65 -12 V
64 6 V
65 -8 V
65 9 V
65 -6 V
64 -2 V
65 11 V
65 6 V
64 5 V
65 -1 V
65 -6 V
64 8 V
65 10 V
65 10 V
65 4 V
64 5 V
65 8 V
65 9 V
65 6 V
64 10 V
65 3 V
65 21 V
65 8 V
64 2 V
65 11 V
65 3 V
65 7 V
64 10 V
65 12 V
65 4 V
65 5 V
64 2 V
65 10 V
65 -3 V
65 9 V
65 9 V
64 4 V
65 8 V
65 34 V
65 22 V
64 23 V
65 50 V
65 88 V
65 54 V
65 69 V
64 87 V
65 115 V
65 112 V
65 91 V
65 82 V
64 133 V
65 66 V
65 73 V
65 93 V
64 91 V
65 430 V
65 -130 V
65 250 V
65 127 V
64 133 V
65 99 V
65 64 V
65 35 V
65 59 V
64 161 V
65 108 V
65 69 V
65 56 V
65 159 V
64 23 V
65 205 V
686 4522 TriU
751 795 TriU
816 783 TriU
880 789 TriU
945 781 TriU
1010 790 TriU
1075 784 TriU
1139 782 TriU
1204 793 TriU
1269 799 TriU
1333 804 TriU
1398 803 TriU
1463 797 TriU
1527 805 TriU
1592 815 TriU
1657 825 TriU
1722 829 TriU
1786 834 TriU
1851 842 TriU
1916 851 TriU
1981 857 TriU
2045 867 TriU
2110 870 TriU
2175 891 TriU
2240 899 TriU
2304 901 TriU
2369 912 TriU
2434 915 TriU
2499 922 TriU
2563 932 TriU
2628 944 TriU
2693 948 TriU
2758 953 TriU
2822 955 TriU
2887 965 TriU
2952 962 TriU
3017 971 TriU
3082 980 TriU
3146 984 TriU
3211 992 TriU
3276 1026 TriU
3341 1048 TriU
3405 1071 TriU
3470 1121 TriU
3535 1209 TriU
3600 1263 TriU
3665 1332 TriU
3729 1419 TriU
3794 1534 TriU
3859 1646 TriU
3924 1737 TriU
3989 1819 TriU
4053 1952 TriU
4118 2018 TriU
4183 2091 TriU
4248 2184 TriU
4312 2275 TriU
4377 2705 TriU
4442 2575 TriU
4507 2825 TriU
4572 2952 TriU
4636 3085 TriU
4701 3184 TriU
4766 3248 TriU
4831 3283 TriU
4896 3342 TriU
4960 3503 TriU
5025 3611 TriU
5090 3680 TriU
5155 3736 TriU
5220 3895 TriU
5284 3918 TriU
5349 4123 TriU
6595 861 TriU
% End plot #1
% Begin plot #2
0.500 UP
1.000 UL
LT1
0.86 0.08 0.24 C LCb setrgbcolor
6328 721 M
(Lazy Binary Queue - List) Rshow
LT1
0.86 0.08 0.24 C 6412 721 M
367 0 V
686 1473 M
65 36 V
65 1 V
64 -2 V
65 6 V
65 5 V
65 -1 V
64 9 V
65 9 V
65 13 V
64 13 V
65 -3 V
65 18 V
64 4 V
65 21 V
65 -7 V
65 8 V
64 6 V
65 3 V
65 7 V
65 9 V
64 4 V
65 2 V
65 15 V
65 4 V
64 4 V
65 11 V
65 -2 V
65 3 V
64 6 V
65 7 V
65 4 V
65 5 V
64 1 V
65 4 V
65 21 V
65 205 V
65 -140 V
64 -10 V
65 147 V
65 -103 V
65 358 V
64 -94 V
65 21 V
65 192 V
65 74 V
65 135 V
64 65 V
65 64 V
65 113 V
65 36 V
65 23 V
64 86 V
65 65 V
65 60 V
65 197 V
64 -16 V
65 65 V
65 42 V
65 26 V
65 62 V
64 110 V
65 -45 V
65 80 V
65 18 V
65 -25 V
64 12 V
65 198 V
65 -178 V
65 7 V
65 118 V
64 143 V
65 -53 V
686 1473 TriUF
751 1509 TriUF
816 1510 TriUF
880 1508 TriUF
945 1514 TriUF
1010 1519 TriUF
1075 1518 TriUF
1139 1527 TriUF
1204 1536 TriUF
1269 1549 TriUF
1333 1562 TriUF
1398 1559 TriUF
1463 1577 TriUF
1527 1581 TriUF
1592 1602 TriUF
1657 1595 TriUF
1722 1603 TriUF
1786 1609 TriUF
1851 1612 TriUF
1916 1619 TriUF
1981 1628 TriUF
2045 1632 TriUF
2110 1634 TriUF
2175 1649 TriUF
2240 1653 TriUF
2304 1657 TriUF
2369 1668 TriUF
2434 1666 TriUF
2499 1669 TriUF
2563 1675 TriUF
2628 1682 TriUF
2693 1686 TriUF
2758 1691 TriUF
2822 1692 TriUF
2887 1696 TriUF
2952 1717 TriUF
3017 1922 TriUF
3082 1782 TriUF
3146 1772 TriUF
3211 1919 TriUF
3276 1816 TriUF
3341 2174 TriUF
3405 2080 TriUF
3470 2101 TriUF
3535 2293 TriUF
3600 2367 TriUF
3665 2502 TriUF
3729 2567 TriUF
3794 2631 TriUF
3859 2744 TriUF
3924 2780 TriUF
3989 2803 TriUF
4053 2889 TriUF
4118 2954 TriUF
4183 3014 TriUF
4248 3211 TriUF
4312 3195 TriUF
4377 3260 TriUF
4442 3302 TriUF
4507 3328 TriUF
4572 3390 TriUF
4636 3500 TriUF
4701 3455 TriUF
4766 3535 TriUF
4831 3553 TriUF
4896 3528 TriUF
4960 3540 TriUF
5025 3738 TriUF
5090 3560 TriUF
5155 3567 TriUF
5220 3685 TriUF
5284 3828 TriUF
5349 3775 TriUF
6595 721 TriUF
% End plot #2
% Begin plot #3
0.500 UP
1.000 UL
LT2
0.54 0.17 0.89 C LCb setrgbcolor
6328 581 M
(Boost Fibonacci) Rshow
LT2
0.54 0.17 0.89 C 6412 581 M
367 0 V
686 691 M
65 3 V
65 -5 V
64 4 V
65 -18 V
65 7 V
65 -11 V
64 1 V
65 -5 V
65 11 V
64 2 V
65 5 V
65 16 V
64 -1 V
65 4 V
65 11 V
65 21 V
64 2 V
65 8 V
65 6 V
65 11 V
64 11 V
65 -4 V
65 43 V
65 -15 V
64 2 V
65 5 V
65 4 V
65 2 V
64 3 V
65 9 V
65 5 V
65 6 V
64 9 V
65 9 V
65 26 V
65 2 V
65 40 V
64 43 V
65 53 V
65 72 V
65 58 V
64 63 V
65 57 V
65 61 V
65 67 V
65 41 V
64 43 V
65 38 V
65 46 V
65 29 V
65 28 V
64 37 V
65 1 V
65 38 V
65 58 V
64 44 V
65 51 V
65 42 V
65 38 V
65 31 V
64 8 V
65 32 V
65 38 V
65 23 V
65 -3 V
64 24 V
65 27 V
65 33 V
65 44 V
65 110 V
64 -2 V
65 -2 V
686 691 CircleF
751 694 CircleF
816 689 CircleF
880 693 CircleF
945 675 CircleF
1010 682 CircleF
1075 671 CircleF
1139 672 CircleF
1204 667 CircleF
1269 678 CircleF
1333 680 CircleF
1398 685 CircleF
1463 701 CircleF
1527 700 CircleF
1592 704 CircleF
1657 715 CircleF
1722 736 CircleF
1786 738 CircleF
1851 746 CircleF
1916 752 CircleF
1981 763 CircleF
2045 774 CircleF
2110 770 CircleF
2175 813 CircleF
2240 798 CircleF
2304 800 CircleF
2369 805 CircleF
2434 809 CircleF
2499 811 CircleF
2563 814 CircleF
2628 823 CircleF
2693 828 CircleF
2758 834 CircleF
2822 843 CircleF
2887 852 CircleF
2952 878 CircleF
3017 880 CircleF
3082 920 CircleF
3146 963 CircleF
3211 1016 CircleF
3276 1088 CircleF
3341 1146 CircleF
3405 1209 CircleF
3470 1266 CircleF
3535 1327 CircleF
3600 1394 CircleF
3665 1435 CircleF
3729 1478 CircleF
3794 1516 CircleF
3859 1562 CircleF
3924 1591 CircleF
3989 1619 CircleF
4053 1656 CircleF
4118 1657 CircleF
4183 1695 CircleF
4248 1753 CircleF
4312 1797 CircleF
4377 1848 CircleF
4442 1890 CircleF
4507 1928 CircleF
4572 1959 CircleF
4636 1967 CircleF
4701 1999 CircleF
4766 2037 CircleF
4831 2060 CircleF
4896 2057 CircleF
4960 2081 CircleF
5025 2108 CircleF
5090 2141 CircleF
5155 2185 CircleF
5220 2295 CircleF
5284 2293 CircleF
5349 2291 CircleF
6595 581 CircleF
% End plot #3
1.000 UL
LTb
LCb setrgbcolor
686 4871 N
686 448 L
6261 0 V
0 4423 V
-6261 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./figures/lazy_push_po.ps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Wed Jun  4 16:48:26 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./figures/lazy_push_po.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (kasper)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  4 16:48:26 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
770 448 M
63 0 V
6114 0 R
-63 0 V
686 448 M
( 0) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 939 M
63 0 V
6114 0 R
-63 0 V
686 939 M
( 0.01) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 1431 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.02) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 1922 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.03) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 2414 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.04) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 2905 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.05) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 3397 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.06) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 3888 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.07) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 4380 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.08) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 4871 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.09) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 448 M
0 63 V
0 4360 R
0 -63 V
770 308 M
( 1000) Cshow
1.000 UL
LTb
LCb setrgbcolor
1235 448 M
0 31 V
0 4392 R
0 -31 V
1849 448 M
0 31 V
0 4392 R
0 -31 V
2165 448 M
0 31 V
0 4392 R
0 -31 V
2314 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 10000) Cshow
1.000 UL
LTb
LCb setrgbcolor
2779 448 M
0 31 V
0 4392 R
0 -31 V
3394 448 M
0 31 V
0 4392 R
0 -31 V
3709 448 M
0 31 V
0 4392 R
0 -31 V
3859 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 100000) Cshow
1.000 UL
LTb
LCb setrgbcolor
4323 448 M
0 31 V
0 4392 R
0 -31 V
4938 448 M
0 31 V
0 4392 R
0 -31 V
5253 448 M
0 31 V
0 4392 R
0 -31 V
5403 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 1e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
5868 448 M
0 31 V
0 4392 R
0 -31 V
6482 448 M
0 31 V
0 4392 R
0 -31 V
6797 448 M
0 31 V
0 4392 R
0 -31 V
6947 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 1e+07) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
770 4871 N
770 448 L
6177 0 V
0 4423 V
-6177 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 M
(time in micro-seconds per. operation) Cshow
grestore
LTb
LCb setrgbcolor
3858 98 M
(number of elements) Cshow
LTb
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.500 UP
1.000 UL
LT0
0.50 0.50 0.00 C LCb setrgbcolor
6328 861 M
(Lazy Binary Queue - Vector) Rshow
LT0
0.50 0.50 0.00 C 6412 861 M
367 0 V
770 1342 M
64 -72 V
64 -270 V
64 24 V
64 -93 V
63 85 V
64 -124 V
64 -20 V
64 76 V
64 -95 V
63 -22 V
64 -21 V
64 2 V
64 -13 V
64 -30 V
64 65 V
64 -35 V
64 -18 V
63 -12 V
64 -15 V
64 -6 V
64 6 V
64 0 V
64 -2 V
64 -31 V
64 1 V
63 0 V
64 83 V
64 -64 V
64 -19 V
64 50 V
64 -34 V
64 -12 V
64 -1 V
64 1 V
64 2 V
63 1 V
64 107 V
64 -27 V
64 -4 V
64 17 V
64 110 V
64 73 V
64 -10 V
64 134 V
64 -10 V
64 36 V
64 28 V
63 30 V
64 17 V
64 36 V
64 0 V
64 83 V
64 -34 V
64 10 V
64 8 V
64 34 V
64 13 V
64 -4 V
64 37 V
63 -47 V
64 -6 V
64 15 V
64 0 V
64 -2 V
64 -1 V
64 20 V
64 -28 V
64 -2 V
64 27 V
64 6 V
64 -29 V
64 -6 V
770 1342 TriU
834 1270 TriU
898 1000 TriU
962 1024 TriU
1026 931 TriU
1089 1016 TriU
1153 892 TriU
1217 872 TriU
1281 948 TriU
1345 853 TriU
1408 831 TriU
1472 810 TriU
1536 812 TriU
1600 799 TriU
1664 769 TriU
1728 834 TriU
1792 799 TriU
1856 781 TriU
1919 769 TriU
1983 754 TriU
2047 748 TriU
2111 754 TriU
2175 754 TriU
2239 752 TriU
2303 721 TriU
2367 722 TriU
2430 722 TriU
2494 805 TriU
2558 741 TriU
2622 722 TriU
2686 772 TriU
2750 738 TriU
2814 726 TriU
2878 725 TriU
2942 726 TriU
3006 728 TriU
3069 729 TriU
3133 836 TriU
3197 809 TriU
3261 805 TriU
3325 822 TriU
3389 932 TriU
3453 1005 TriU
3517 995 TriU
3581 1129 TriU
3645 1119 TriU
3709 1155 TriU
3773 1183 TriU
3836 1213 TriU
3900 1230 TriU
3964 1266 TriU
4028 1266 TriU
4092 1349 TriU
4156 1315 TriU
4220 1325 TriU
4284 1333 TriU
4348 1367 TriU
4412 1380 TriU
4476 1376 TriU
4540 1413 TriU
4603 1366 TriU
4667 1360 TriU
4731 1375 TriU
4795 1375 TriU
4859 1373 TriU
4923 1372 TriU
4987 1392 TriU
5051 1364 TriU
5115 1362 TriU
5179 1389 TriU
5243 1395 TriU
5307 1366 TriU
5371 1360 TriU
6595 861 TriU
% End plot #1
% Begin plot #2
0.500 UP
1.000 UL
LT1
0.86 0.08 0.24 C LCb setrgbcolor
6328 721 M
(Lazy Binary Queue - List) Rshow
LT1
0.86 0.08 0.24 C 6412 721 M
367 0 V
770 4783 M
64 -412 V
64 -942 V
64 -219 V
64 -251 V
63 -289 V
64 -107 V
64 -132 V
64 151 V
64 -336 V
63 -125 V
64 -83 V
64 -95 V
64 -67 V
64 -72 V
64 84 V
64 -180 V
64 72 V
63 -71 V
64 3 V
64 124 V
64 -122 V
64 3 V
64 147 V
64 -154 V
64 63 V
63 15 V
64 -80 V
64 6 V
64 80 V
64 105 V
64 -103 V
64 5 V
64 442 V
64 -465 V
64 185 V
63 137 V
64 219 V
64 -32 V
64 -17 V
64 419 V
64 216 V
64 245 V
64 -135 V
64 377 V
64 -121 V
64 182 V
64 25 V
63 64 V
64 105 V
64 -8 V
64 48 V
64 159 V
64 61 V
64 17 V
64 25 V
64 105 V
64 9 V
64 78 V
64 174 V
63 -175 V
64 31 V
64 50 V
64 -82 V
64 -44 V
64 8 V
64 203 V
64 -64 V
64 -68 V
64 -17 V
64 10 V
64 -31 V
64 -37 V
770 4783 TriUF
834 4371 TriUF
898 3429 TriUF
962 3210 TriUF
1026 2959 TriUF
1089 2670 TriUF
1153 2563 TriUF
1217 2431 TriUF
1281 2582 TriUF
1345 2246 TriUF
1408 2121 TriUF
1472 2038 TriUF
1536 1943 TriUF
1600 1876 TriUF
1664 1804 TriUF
1728 1888 TriUF
1792 1708 TriUF
1856 1780 TriUF
1919 1709 TriUF
1983 1712 TriUF
2047 1836 TriUF
2111 1714 TriUF
2175 1717 TriUF
2239 1864 TriUF
2303 1710 TriUF
2367 1773 TriUF
2430 1788 TriUF
2494 1708 TriUF
2558 1714 TriUF
2622 1794 TriUF
2686 1899 TriUF
2750 1796 TriUF
2814 1801 TriUF
2878 2243 TriUF
2942 1778 TriUF
3006 1963 TriUF
3069 2100 TriUF
3133 2319 TriUF
3197 2287 TriUF
3261 2270 TriUF
3325 2689 TriUF
3389 2905 TriUF
3453 3150 TriUF
3517 3015 TriUF
3581 3392 TriUF
3645 3271 TriUF
3709 3453 TriUF
3773 3478 TriUF
3836 3542 TriUF
3900 3647 TriUF
3964 3639 TriUF
4028 3687 TriUF
4092 3846 TriUF
4156 3907 TriUF
4220 3924 TriUF
4284 3949 TriUF
4348 4054 TriUF
4412 4063 TriUF
4476 4141 TriUF
4540 4315 TriUF
4603 4140 TriUF
4667 4171 TriUF
4731 4221 TriUF
4795 4139 TriUF
4859 4095 TriUF
4923 4103 TriUF
4987 4306 TriUF
5051 4242 TriUF
5115 4174 TriUF
5179 4157 TriUF
5243 4167 TriUF
5307 4136 TriUF
5371 4099 TriUF
6595 721 TriUF
% End plot #2
% Begin plot #3
0.500 UP
1.000 UL
LT2
0.54 0.17 0.89 C LCb setrgbcolor
6328 581 M
(Boost Fibonacci) Rshow
LT2
0.54 0.17 0.89 C 6412 581 M
367 0 V
770 1765 M
64 -138 V
64 -26 V
64 6 V
64 2 V
63 -1 V
64 -6 V
64 6 V
64 -17 V
64 8 V
63 -5 V
64 -1 V
64 9 V
64 -5 V
64 -1 V
64 4 V
64 5 V
64 -4 V
63 -2 V
64 -1 V
64 -2 V
64 -1 V
64 1 V
64 11 V
64 -10 V
64 -5 V
63 9 V
64 -2 V
64 -4 V
64 6 V
64 -6 V
64 2 V
64 -2 V
64 1 V
64 -2 V
64 2 V
63 7 V
64 0 V
64 5 V
64 7 V
64 7 V
64 14 V
64 37 V
64 -23 V
64 -11 V
64 7 V
64 3 V
64 8 V
63 4 V
64 1 V
64 2 V
64 4 V
64 2 V
64 1 V
64 5 V
64 3 V
64 5 V
64 1 V
64 3 V
64 0 V
63 2 V
64 0 V
64 3 V
64 1 V
64 1 V
64 0 V
64 2 V
64 0 V
64 6 V
64 -6 V
64 50 V
64 -2 V
64 1 V
770 1765 CircleF
834 1627 CircleF
898 1601 CircleF
962 1607 CircleF
1026 1609 CircleF
1089 1608 CircleF
1153 1602 CircleF
1217 1608 CircleF
1281 1591 CircleF
1345 1599 CircleF
1408 1594 CircleF
1472 1593 CircleF
1536 1602 CircleF
1600 1597 CircleF
1664 1596 CircleF
1728 1600 CircleF
1792 1605 CircleF
1856 1601 CircleF
1919 1599 CircleF
1983 1598 CircleF
2047 1596 CircleF
2111 1595 CircleF
2175 1596 CircleF
2239 1607 CircleF
2303 1597 CircleF
2367 1592 CircleF
2430 1601 CircleF
2494 1599 CircleF
2558 1595 CircleF
2622 1601 CircleF
2686 1595 CircleF
2750 1597 CircleF
2814 1595 CircleF
2878 1596 CircleF
2942 1594 CircleF
3006 1596 CircleF
3069 1603 CircleF
3133 1603 CircleF
3197 1608 CircleF
3261 1615 CircleF
3325 1622 CircleF
3389 1636 CircleF
3453 1673 CircleF
3517 1650 CircleF
3581 1639 CircleF
3645 1646 CircleF
3709 1649 CircleF
3773 1657 CircleF
3836 1661 CircleF
3900 1662 CircleF
3964 1664 CircleF
4028 1668 CircleF
4092 1670 CircleF
4156 1671 CircleF
4220 1676 CircleF
4284 1679 CircleF
4348 1684 CircleF
4412 1685 CircleF
4476 1688 CircleF
4540 1688 CircleF
4603 1690 CircleF
4667 1690 CircleF
4731 1693 CircleF
4795 1694 CircleF
4859 1695 CircleF
4923 1695 CircleF
4987 1697 CircleF
5051 1697 CircleF
5115 1703 CircleF
5179 1697 CircleF
5243 1747 CircleF
5307 1745 CircleF
5371 1746 CircleF
6595 581 CircleF
% End plot #3
1.000 UL
LTb
LCb setrgbcolor
770 4871 N
770 448 L
6177 0 V
0 4423 V
-6177 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

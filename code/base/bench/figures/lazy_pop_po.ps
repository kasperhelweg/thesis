%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./figures/lazy_pop_po.ps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Wed Jun  4 16:48:26 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./figures/lazy_pop_po.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (kasper)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  4 16:48:26 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 1333 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.5) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 2217 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 1) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 3102 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 1.5) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 3986 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 2) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 4871 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 2.5) Rshow
1.000 UL
LTb
LCb setrgbcolor
686 448 M
0 63 V
0 4360 R
0 -63 V
686 308 M
( 1000) Cshow
1.000 UL
LTb
LCb setrgbcolor
1157 448 M
0 31 V
0 4392 R
0 -31 V
1780 448 M
0 31 V
0 4392 R
0 -31 V
2100 448 M
0 31 V
0 4392 R
0 -31 V
2251 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 10000) Cshow
1.000 UL
LTb
LCb setrgbcolor
2722 448 M
0 31 V
0 4392 R
0 -31 V
3345 448 M
0 31 V
0 4392 R
0 -31 V
3665 448 M
0 31 V
0 4392 R
0 -31 V
3817 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 100000) Cshow
1.000 UL
LTb
LCb setrgbcolor
4288 448 M
0 31 V
0 4392 R
0 -31 V
4911 448 M
0 31 V
0 4392 R
0 -31 V
5230 448 M
0 31 V
0 4392 R
0 -31 V
5382 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 1e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
5853 448 M
0 31 V
0 4392 R
0 -31 V
6476 448 M
0 31 V
0 4392 R
0 -31 V
6795 448 M
0 31 V
0 4392 R
0 -31 V
6947 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 1e+07) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
686 4871 N
686 448 L
6261 0 V
0 4423 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 M
(time in micro-seconds per. operation) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(number of elements) Cshow
LTb
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.500 UP
1.000 UL
LT0
0.50 0.50 0.00 C LCb setrgbcolor
6328 861 M
(Lazy Binary Queue - Vector) Rshow
LT0
0.50 0.50 0.00 C 6412 861 M
367 0 V
686 2142 M
751 980 L
65 4 V
64 7 V
65 10 V
65 5 V
65 5 V
64 7 V
65 14 V
65 6 V
64 8 V
65 9 V
65 5 V
64 10 V
65 7 V
65 10 V
65 9 V
64 10 V
65 8 V
65 11 V
65 10 V
64 11 V
65 10 V
65 15 V
65 9 V
64 10 V
65 12 V
65 12 V
65 11 V
64 10 V
65 15 V
65 12 V
65 9 V
64 10 V
65 14 V
65 10 V
65 12 V
65 13 V
64 11 V
65 10 V
65 18 V
65 11 V
64 27 V
65 36 V
65 53 V
65 73 V
65 40 V
64 13 V
65 48 V
65 66 V
65 45 V
65 71 V
64 62 V
65 88 V
65 73 V
65 65 V
64 86 V
65 90 V
65 -58 V
65 61 V
65 99 V
64 74 V
65 57 V
65 97 V
65 105 V
65 53 V
64 187 V
65 66 V
65 145 V
65 105 V
65 99 V
64 219 V
65 4 V
686 2142 TriU
751 980 TriU
816 984 TriU
880 991 TriU
945 1001 TriU
1010 1006 TriU
1075 1011 TriU
1139 1018 TriU
1204 1032 TriU
1269 1038 TriU
1333 1046 TriU
1398 1055 TriU
1463 1060 TriU
1527 1070 TriU
1592 1077 TriU
1657 1087 TriU
1722 1096 TriU
1786 1106 TriU
1851 1114 TriU
1916 1125 TriU
1981 1135 TriU
2045 1146 TriU
2110 1156 TriU
2175 1171 TriU
2240 1180 TriU
2304 1190 TriU
2369 1202 TriU
2434 1214 TriU
2499 1225 TriU
2563 1235 TriU
2628 1250 TriU
2693 1262 TriU
2758 1271 TriU
2822 1281 TriU
2887 1295 TriU
2952 1305 TriU
3017 1317 TriU
3082 1330 TriU
3146 1341 TriU
3211 1351 TriU
3276 1369 TriU
3341 1380 TriU
3405 1407 TriU
3470 1443 TriU
3535 1496 TriU
3600 1569 TriU
3665 1609 TriU
3729 1622 TriU
3794 1670 TriU
3859 1736 TriU
3924 1781 TriU
3989 1852 TriU
4053 1914 TriU
4118 2002 TriU
4183 2075 TriU
4248 2140 TriU
4312 2226 TriU
4377 2316 TriU
4442 2258 TriU
4507 2319 TriU
4572 2418 TriU
4636 2492 TriU
4701 2549 TriU
4766 2646 TriU
4831 2751 TriU
4896 2804 TriU
4960 2991 TriU
5025 3057 TriU
5090 3202 TriU
5155 3307 TriU
5220 3406 TriU
5284 3625 TriU
5349 3629 TriU
6595 861 TriU
% End plot #1
% Begin plot #2
0.500 UP
1.000 UL
LT1
0.86 0.08 0.24 C LCb setrgbcolor
6328 721 M
(Lazy Binary Queue - List) Rshow
LT1
0.86 0.08 0.24 C 6412 721 M
367 0 V
686 1333 M
65 15 V
65 12 V
64 9 V
65 13 V
65 -3 V
65 16 V
64 18 V
65 12 V
65 12 V
64 10 V
65 16 V
65 9 V
64 19 V
65 11 V
65 19 V
65 17 V
64 19 V
65 14 V
65 12 V
65 20 V
64 55 V
65 29 V
65 14 V
65 19 V
64 20 V
65 18 V
65 10 V
65 26 V
64 12 V
65 13 V
65 18 V
65 22 V
64 19 V
65 33 V
65 19 V
65 38 V
65 59 V
64 56 V
65 89 V
65 -15 V
65 92 V
64 123 V
65 20 V
65 6 V
65 87 V
65 179 V
64 148 V
65 97 V
65 74 V
65 81 V
65 -45 V
64 24 V
65 141 V
65 -37 V
65 14 V
64 66 V
65 56 V
65 80 V
65 -33 V
65 29 V
64 24 V
65 66 V
65 -39 V
65 9 V
65 152 V
64 202 V
65 158 V
65 85 V
65 -79 V
65 31 V
64 595 V
65 23 V
686 1333 TriUF
751 1348 TriUF
816 1360 TriUF
880 1369 TriUF
945 1382 TriUF
1010 1379 TriUF
1075 1395 TriUF
1139 1413 TriUF
1204 1425 TriUF
1269 1437 TriUF
1333 1447 TriUF
1398 1463 TriUF
1463 1472 TriUF
1527 1491 TriUF
1592 1502 TriUF
1657 1521 TriUF
1722 1538 TriUF
1786 1557 TriUF
1851 1571 TriUF
1916 1583 TriUF
1981 1603 TriUF
2045 1658 TriUF
2110 1687 TriUF
2175 1701 TriUF
2240 1720 TriUF
2304 1740 TriUF
2369 1758 TriUF
2434 1768 TriUF
2499 1794 TriUF
2563 1806 TriUF
2628 1819 TriUF
2693 1837 TriUF
2758 1859 TriUF
2822 1878 TriUF
2887 1911 TriUF
2952 1930 TriUF
3017 1968 TriUF
3082 2027 TriUF
3146 2083 TriUF
3211 2172 TriUF
3276 2157 TriUF
3341 2249 TriUF
3405 2372 TriUF
3470 2392 TriUF
3535 2398 TriUF
3600 2485 TriUF
3665 2664 TriUF
3729 2812 TriUF
3794 2909 TriUF
3859 2983 TriUF
3924 3064 TriUF
3989 3019 TriUF
4053 3043 TriUF
4118 3184 TriUF
4183 3147 TriUF
4248 3161 TriUF
4312 3227 TriUF
4377 3283 TriUF
4442 3363 TriUF
4507 3330 TriUF
4572 3359 TriUF
4636 3383 TriUF
4701 3449 TriUF
4766 3410 TriUF
4831 3419 TriUF
4896 3571 TriUF
4960 3773 TriUF
5025 3931 TriUF
5090 4016 TriUF
5155 3937 TriUF
5220 3968 TriUF
5284 4563 TriUF
5349 4586 TriUF
6595 721 TriUF
% End plot #2
% Begin plot #3
0.500 UP
1.000 UL
LT2
0.54 0.17 0.89 C LCb setrgbcolor
6328 581 M
(Boost Fibonacci) Rshow
LT2
0.54 0.17 0.89 C 6412 581 M
367 0 V
686 923 M
65 7 V
65 4 V
64 11 V
65 4 V
65 10 V
65 5 V
64 7 V
65 7 V
65 10 V
64 6 V
65 8 V
65 11 V
64 6 V
65 9 V
65 7 V
65 12 V
64 10 V
65 8 V
65 9 V
65 9 V
64 6 V
65 8 V
65 8 V
65 12 V
64 10 V
65 10 V
65 9 V
65 8 V
64 10 V
65 5 V
65 11 V
65 10 V
64 10 V
65 8 V
65 9 V
65 7 V
65 5 V
64 15 V
65 11 V
65 11 V
65 23 V
64 43 V
65 53 V
65 11 V
65 42 V
65 27 V
64 33 V
65 23 V
65 31 V
65 35 V
65 37 V
64 46 V
65 61 V
65 5 V
65 52 V
64 30 V
65 40 V
65 69 V
65 1 V
65 72 V
64 8 V
65 30 V
65 14 V
65 21 V
65 4 V
64 11 V
65 113 V
65 145 V
65 99 V
65 -11 V
64 11 V
65 54 V
686 923 CircleF
751 930 CircleF
816 934 CircleF
880 945 CircleF
945 949 CircleF
1010 959 CircleF
1075 964 CircleF
1139 971 CircleF
1204 978 CircleF
1269 988 CircleF
1333 994 CircleF
1398 1002 CircleF
1463 1013 CircleF
1527 1019 CircleF
1592 1028 CircleF
1657 1035 CircleF
1722 1047 CircleF
1786 1057 CircleF
1851 1065 CircleF
1916 1074 CircleF
1981 1083 CircleF
2045 1089 CircleF
2110 1097 CircleF
2175 1105 CircleF
2240 1117 CircleF
2304 1127 CircleF
2369 1137 CircleF
2434 1146 CircleF
2499 1154 CircleF
2563 1164 CircleF
2628 1169 CircleF
2693 1180 CircleF
2758 1190 CircleF
2822 1200 CircleF
2887 1208 CircleF
2952 1217 CircleF
3017 1224 CircleF
3082 1229 CircleF
3146 1244 CircleF
3211 1255 CircleF
3276 1266 CircleF
3341 1289 CircleF
3405 1332 CircleF
3470 1385 CircleF
3535 1396 CircleF
3600 1438 CircleF
3665 1465 CircleF
3729 1498 CircleF
3794 1521 CircleF
3859 1552 CircleF
3924 1587 CircleF
3989 1624 CircleF
4053 1670 CircleF
4118 1731 CircleF
4183 1736 CircleF
4248 1788 CircleF
4312 1818 CircleF
4377 1858 CircleF
4442 1927 CircleF
4507 1928 CircleF
4572 2000 CircleF
4636 2008 CircleF
4701 2038 CircleF
4766 2052 CircleF
4831 2073 CircleF
4896 2077 CircleF
4960 2088 CircleF
5025 2201 CircleF
5090 2346 CircleF
5155 2445 CircleF
5220 2434 CircleF
5284 2445 CircleF
5349 2499 CircleF
6595 581 CircleF
% End plot #3
1.000 UL
LTb
LCb setrgbcolor
686 4871 N
686 448 L
6261 0 V
0 4423 V
-6261 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

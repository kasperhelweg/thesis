%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./figures/comp_pop.ps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Wed May  7 15:31:25 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./figures/comp_pop.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (kasper)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed May  7 15:31:25 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
546 280 M
63 0 V
6338 0 R
-63 0 V
462 280 M
( 0) Rshow
1.000 UL
LTb
LCb setrgbcolor
546 1198 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
( 20) Rshow
1.000 UL
LTb
LCb setrgbcolor
546 2116 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
( 40) Rshow
1.000 UL
LTb
LCb setrgbcolor
546 3035 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
( 60) Rshow
1.000 UL
LTb
LCb setrgbcolor
546 3953 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
( 80) Rshow
1.000 UL
LTb
LCb setrgbcolor
546 4871 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
( 100) Rshow
1.000 UL
LTb
LCb setrgbcolor
546 280 M
0 63 V
0 4528 R
0 -63 V
546 140 M
( 0) Cshow
1.000 UL
LTb
LCb setrgbcolor
1186 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 1e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
1826 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 2e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
2466 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 3e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
3106 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 4e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
3747 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 5e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
4387 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 6e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
5027 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 7e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
5667 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 8e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
6307 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 9e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
6947 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 1e+07) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
546 4871 N
546 280 L
6401 0 V
0 4591 V
-6401 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.500 UP
1.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
6328 4738 M
(Magic Binary Queue Pop Comps) Rshow
LT0
6412 4738 M
367 0 V
547 1244 M
0 46 V
0 46 V
0 46 V
0 46 V
1 46 V
0 46 V
0 45 V
1 0 V
0 46 V
0 46 V
1 0 V
0 46 V
1 46 V
0 46 V
1 0 V
1 46 V
1 46 V
1 0 V
0 46 V
1 0 V
1 0 V
0 46 V
1 0 V
1 46 V
1 0 V
1 0 V
1 45 V
1 0 V
1 0 V
1 46 V
1 0 V
1 0 V
1 46 V
1 0 V
2 0 V
1 0 V
1 46 V
2 0 V
1 0 V
1 46 V
2 0 V
2 0 V
1 0 V
2 46 V
2 0 V
2 0 V
2 46 V
2 0 V
3 0 V
2 0 V
3 46 V
2 0 V
3 0 V
3 0 V
3 46 V
4 0 V
3 0 V
4 46 V
3 0 V
4 0 V
5 0 V
4 46 V
5 0 V
4 0 V
5 46 V
6 0 V
5 0 V
6 0 V
6 45 V
7 0 V
7 0 V
7 46 V
7 0 V
8 0 V
8 0 V
9 46 V
9 0 V
10 0 V
10 46 V
10 0 V
11 0 V
12 0 V
12 46 V
13 0 V
13 0 V
14 46 V
15 0 V
16 0 V
16 0 V
17 46 V
18 0 V
19 0 V
20 0 V
21 46 V
22 0 V
23 0 V
24 46 V
25 0 V
27 0 V
28 0 V
29 46 V
31 0 V
stroke 1193 3035 M
32 0 V
34 46 V
36 0 V
38 0 V
39 0 V
41 45 V
44 0 V
45 0 V
48 46 V
50 0 V
53 0 V
55 0 V
58 46 V
61 0 V
64 0 V
68 0 V
70 46 V
74 0 V
78 0 V
82 46 V
86 0 V
90 0 V
95 0 V
99 46 V
104 0 V
110 0 V
115 46 V
121 0 V
127 0 V
133 0 V
140 46 V
146 0 V
155 0 V
161 46 V
170 0 V
179 0 V
187 0 V
197 46 V
207 0 V
217 0 V
227 46 V
240 0 V
251 0 V
263 0 V
277 45 V
291 0 V
547 1244 TriUF
547 1244 TriUF
547 1244 TriUF
547 1290 TriUF
547 1290 TriUF
547 1290 TriUF
547 1336 TriUF
547 1336 TriUF
547 1336 TriUF
547 1336 TriUF
547 1336 TriUF
547 1382 TriUF
547 1382 TriUF
547 1382 TriUF
547 1428 TriUF
547 1428 TriUF
547 1428 TriUF
547 1428 TriUF
548 1474 TriUF
548 1474 TriUF
548 1474 TriUF
548 1474 TriUF
548 1520 TriUF
548 1520 TriUF
548 1520 TriUF
548 1520 TriUF
548 1565 TriUF
548 1565 TriUF
548 1565 TriUF
549 1565 TriUF
549 1611 TriUF
549 1611 TriUF
549 1611 TriUF
549 1657 TriUF
549 1657 TriUF
550 1657 TriUF
550 1657 TriUF
550 1703 TriUF
550 1703 TriUF
550 1703 TriUF
550 1703 TriUF
551 1749 TriUF
551 1749 TriUF
551 1749 TriUF
551 1795 TriUF
552 1795 TriUF
552 1795 TriUF
552 1795 TriUF
553 1841 TriUF
553 1841 TriUF
553 1841 TriUF
554 1887 TriUF
554 1887 TriUF
554 1887 TriUF
555 1887 TriUF
555 1933 TriUF
556 1933 TriUF
556 1933 TriUF
557 1933 TriUF
557 1979 TriUF
558 1979 TriUF
558 1979 TriUF
559 2025 TriUF
560 2025 TriUF
560 2025 TriUF
561 2025 TriUF
562 2070 TriUF
563 2070 TriUF
564 2070 TriUF
564 2070 TriUF
565 2116 TriUF
566 2116 TriUF
567 2116 TriUF
568 2162 TriUF
569 2162 TriUF
571 2162 TriUF
572 2162 TriUF
573 2208 TriUF
575 2208 TriUF
576 2208 TriUF
577 2254 TriUF
579 2254 TriUF
581 2254 TriUF
582 2254 TriUF
584 2300 TriUF
586 2300 TriUF
588 2300 TriUF
590 2346 TriUF
592 2346 TriUF
595 2346 TriUF
597 2346 TriUF
600 2392 TriUF
602 2392 TriUF
605 2392 TriUF
608 2392 TriUF
611 2438 TriUF
615 2438 TriUF
618 2438 TriUF
622 2484 TriUF
625 2484 TriUF
629 2484 TriUF
634 2484 TriUF
638 2530 TriUF
643 2530 TriUF
647 2530 TriUF
652 2576 TriUF
658 2576 TriUF
663 2576 TriUF
669 2576 TriUF
675 2621 TriUF
682 2621 TriUF
689 2621 TriUF
696 2667 TriUF
703 2667 TriUF
711 2667 TriUF
719 2667 TriUF
728 2713 TriUF
737 2713 TriUF
747 2713 TriUF
757 2759 TriUF
767 2759 TriUF
778 2759 TriUF
790 2759 TriUF
802 2805 TriUF
815 2805 TriUF
828 2805 TriUF
842 2851 TriUF
857 2851 TriUF
873 2851 TriUF
889 2851 TriUF
906 2897 TriUF
924 2897 TriUF
943 2897 TriUF
963 2897 TriUF
984 2943 TriUF
1006 2943 TriUF
1029 2943 TriUF
1053 2989 TriUF
1078 2989 TriUF
1105 2989 TriUF
1133 2989 TriUF
1162 3035 TriUF
1193 3035 TriUF
1225 3035 TriUF
1259 3081 TriUF
1295 3081 TriUF
1333 3081 TriUF
1372 3081 TriUF
1413 3126 TriUF
1457 3126 TriUF
1502 3126 TriUF
1550 3172 TriUF
1600 3172 TriUF
1653 3172 TriUF
1708 3172 TriUF
1766 3218 TriUF
1827 3218 TriUF
1891 3218 TriUF
1959 3218 TriUF
2029 3264 TriUF
2103 3264 TriUF
2181 3264 TriUF
2263 3310 TriUF
2349 3310 TriUF
2439 3310 TriUF
2534 3310 TriUF
2633 3356 TriUF
2737 3356 TriUF
2847 3356 TriUF
2962 3402 TriUF
3083 3402 TriUF
3210 3402 TriUF
3343 3402 TriUF
3483 3448 TriUF
3629 3448 TriUF
3784 3448 TriUF
3945 3494 TriUF
4115 3494 TriUF
4294 3494 TriUF
4481 3494 TriUF
4678 3540 TriUF
4885 3540 TriUF
5102 3540 TriUF
5329 3586 TriUF
5569 3586 TriUF
5820 3586 TriUF
6083 3586 TriUF
6360 3631 TriUF
6651 3631 TriUF
6595 4738 TriUF
% End plot #1
% Begin plot #2
0.500 UP
1.000 UL
LT1
LC1 setrgbcolor
LCb setrgbcolor
6328 4598 M
(Lazy Binary Queue Pop Comps) Rshow
LT1
6412 4598 M
367 0 V
547 1060 M
0 46 V
0 46 V
0 46 V
1 0 V
0 46 V
0 46 V
1 0 V
0 46 V
1 0 V
0 46 V
1 0 V
0 46 V
1 0 V
1 0 V
0 46 V
1 0 V
1 0 V
0 46 V
1 0 V
1 0 V
0 45 V
1 0 V
1 0 V
1 0 V
1 46 V
1 0 V
1 0 V
1 0 V
1 0 V
1 46 V
1 0 V
1 0 V
1 0 V
2 0 V
1 46 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
2 46 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 46 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 46 V
3 0 V
4 0 V
3 0 V
4 0 V
3 0 V
4 46 V
5 0 V
4 0 V
5 0 V
4 0 V
5 46 V
6 0 V
5 0 V
6 0 V
6 0 V
7 0 V
7 46 V
7 0 V
7 0 V
8 0 V
8 0 V
9 46 V
9 0 V
10 0 V
10 0 V
10 0 V
11 0 V
12 45 V
12 0 V
13 0 V
13 0 V
14 0 V
15 0 V
16 46 V
16 0 V
17 0 V
18 0 V
19 0 V
20 46 V
21 0 V
22 0 V
23 0 V
24 0 V
25 0 V
27 0 V
28 46 V
29 0 V
31 0 V
32 0 V
stroke 1225 2208 M
34 0 V
36 46 V
38 0 V
39 0 V
41 0 V
44 0 V
45 46 V
48 0 V
50 0 V
53 0 V
55 0 V
58 0 V
61 0 V
64 46 V
68 0 V
70 0 V
74 0 V
78 46 V
82 0 V
86 0 V
90 0 V
95 0 V
99 0 V
104 0 V
110 46 V
115 0 V
121 0 V
127 0 V
133 0 V
140 46 V
146 0 V
155 0 V
161 0 V
170 0 V
179 0 V
187 46 V
197 0 V
207 0 V
217 0 V
227 0 V
240 46 V
251 0 V
263 0 V
277 0 V
291 0 V
547 1060 TriU
547 1106 TriU
547 1106 TriU
547 1106 TriU
547 1106 TriU
547 1106 TriU
547 1106 TriU
547 1152 TriU
547 1152 TriU
547 1152 TriU
547 1152 TriU
547 1152 TriU
547 1152 TriU
547 1198 TriU
547 1198 TriU
547 1198 TriU
547 1198 TriU
547 1198 TriU
548 1198 TriU
548 1244 TriU
548 1244 TriU
548 1244 TriU
548 1244 TriU
548 1244 TriU
548 1244 TriU
548 1244 TriU
548 1290 TriU
548 1290 TriU
548 1290 TriU
549 1290 TriU
549 1290 TriU
549 1336 TriU
549 1336 TriU
549 1336 TriU
549 1336 TriU
550 1336 TriU
550 1382 TriU
550 1382 TriU
550 1382 TriU
550 1382 TriU
550 1382 TriU
551 1382 TriU
551 1382 TriU
551 1428 TriU
551 1428 TriU
552 1428 TriU
552 1428 TriU
552 1428 TriU
553 1428 TriU
553 1474 TriU
553 1474 TriU
554 1474 TriU
554 1474 TriU
554 1474 TriU
555 1474 TriU
555 1520 TriU
556 1520 TriU
556 1520 TriU
557 1520 TriU
557 1565 TriU
558 1565 TriU
558 1565 TriU
559 1565 TriU
560 1565 TriU
560 1565 TriU
561 1611 TriU
562 1611 TriU
563 1611 TriU
564 1611 TriU
564 1611 TriU
565 1611 TriU
566 1657 TriU
567 1657 TriU
568 1657 TriU
569 1657 TriU
571 1657 TriU
572 1703 TriU
573 1703 TriU
575 1703 TriU
576 1703 TriU
577 1703 TriU
579 1703 TriU
581 1749 TriU
582 1749 TriU
584 1749 TriU
586 1749 TriU
588 1749 TriU
590 1749 TriU
592 1795 TriU
595 1795 TriU
597 1795 TriU
600 1795 TriU
602 1795 TriU
605 1795 TriU
608 1841 TriU
611 1841 TriU
615 1841 TriU
618 1841 TriU
622 1841 TriU
625 1841 TriU
629 1887 TriU
634 1887 TriU
638 1887 TriU
643 1887 TriU
647 1887 TriU
652 1933 TriU
658 1933 TriU
663 1933 TriU
669 1933 TriU
675 1933 TriU
682 1933 TriU
689 1979 TriU
696 1979 TriU
703 1979 TriU
711 1979 TriU
719 1979 TriU
728 2025 TriU
737 2025 TriU
747 2025 TriU
757 2025 TriU
767 2025 TriU
778 2025 TriU
790 2070 TriU
802 2070 TriU
815 2070 TriU
828 2070 TriU
842 2070 TriU
857 2070 TriU
873 2116 TriU
889 2116 TriU
906 2116 TriU
924 2116 TriU
943 2116 TriU
963 2162 TriU
984 2162 TriU
1006 2162 TriU
1029 2162 TriU
1053 2162 TriU
1078 2162 TriU
1105 2162 TriU
1133 2208 TriU
1162 2208 TriU
1193 2208 TriU
1225 2208 TriU
1259 2208 TriU
1295 2254 TriU
1333 2254 TriU
1372 2254 TriU
1413 2254 TriU
1457 2254 TriU
1502 2300 TriU
1550 2300 TriU
1600 2300 TriU
1653 2300 TriU
1708 2300 TriU
1766 2300 TriU
1827 2300 TriU
1891 2346 TriU
1959 2346 TriU
2029 2346 TriU
2103 2346 TriU
2181 2392 TriU
2263 2392 TriU
2349 2392 TriU
2439 2392 TriU
2534 2392 TriU
2633 2392 TriU
2737 2392 TriU
2847 2438 TriU
2962 2438 TriU
3083 2438 TriU
3210 2438 TriU
3343 2438 TriU
3483 2484 TriU
3629 2484 TriU
3784 2484 TriU
3945 2484 TriU
4115 2484 TriU
4294 2484 TriU
4481 2530 TriU
4678 2530 TriU
4885 2530 TriU
5102 2530 TriU
5329 2530 TriU
5569 2576 TriU
5820 2576 TriU
6083 2576 TriU
6360 2576 TriU
6651 2576 TriU
6595 4598 TriU
% End plot #2
% Begin plot #3
0.500 UP
1.000 UL
LT2
LC2 setrgbcolor
LCb setrgbcolor
6328 4458 M
(Eager Binary Queue Pop Comps) Rshow
LT2
6412 4458 M
367 0 V
547 1015 M
0 -46 V
0 46 V
0 45 V
0 46 V
1 0 V
0 46 V
0 46 V
1 0 V
0 46 V
1 0 V
0 46 V
1 0 V
0 46 V
1 0 V
1 0 V
0 46 V
1 0 V
0 46 V
1 0 V
1 0 V
1 0 V
0 46 V
1 0 V
1 0 V
1 0 V
1 46 V
1 0 V
1 0 V
1 0 V
1 0 V
1 45 V
1 0 V
1 0 V
1 0 V
2 0 V
1 46 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
2 0 V
1 46 V
2 0 V
2 0 V
2 0 V
2 46 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 46 V
3 0 V
4 0 V
3 0 V
4 0 V
3 0 V
4 46 V
5 0 V
4 0 V
5 0 V
4 46 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
7 0 V
7 46 V
7 0 V
7 0 V
8 0 V
8 0 V
9 46 V
9 0 V
10 0 V
10 0 V
10 0 V
11 0 V
12 46 V
12 0 V
13 0 V
13 0 V
14 0 V
15 0 V
16 46 V
16 0 V
17 0 V
18 0 V
19 0 V
20 45 V
21 0 V
22 0 V
23 0 V
24 0 V
25 0 V
27 46 V
28 0 V
29 0 V
31 0 V
stroke 1193 2116 M
32 0 V
34 0 V
36 46 V
38 0 V
39 0 V
41 0 V
44 0 V
45 46 V
48 0 V
50 0 V
53 0 V
55 0 V
58 0 V
61 46 V
64 0 V
68 0 V
70 0 V
74 0 V
78 0 V
82 46 V
86 0 V
90 0 V
95 0 V
99 0 V
104 0 V
110 46 V
115 0 V
121 0 V
127 0 V
133 0 V
140 46 V
146 0 V
155 0 V
161 0 V
170 0 V
179 0 V
187 46 V
197 0 V
207 0 V
217 0 V
227 0 V
240 0 V
251 46 V
263 0 V
277 0 V
291 0 V
547 1015 CircleF
547 969 CircleF
547 1015 CircleF
547 1015 CircleF
547 1015 CircleF
547 1015 CircleF
547 1015 CircleF
547 1060 CircleF
547 1060 CircleF
547 1060 CircleF
547 1060 CircleF
547 1060 CircleF
547 1060 CircleF
547 1106 CircleF
547 1106 CircleF
547 1106 CircleF
547 1106 CircleF
547 1106 CircleF
548 1106 CircleF
548 1152 CircleF
548 1152 CircleF
548 1152 CircleF
548 1152 CircleF
548 1152 CircleF
548 1152 CircleF
548 1198 CircleF
548 1198 CircleF
548 1198 CircleF
548 1198 CircleF
549 1198 CircleF
549 1244 CircleF
549 1244 CircleF
549 1244 CircleF
549 1244 CircleF
549 1244 CircleF
550 1244 CircleF
550 1290 CircleF
550 1290 CircleF
550 1290 CircleF
550 1290 CircleF
550 1290 CircleF
551 1290 CircleF
551 1290 CircleF
551 1336 CircleF
551 1336 CircleF
552 1336 CircleF
552 1336 CircleF
552 1336 CircleF
553 1336 CircleF
553 1382 CircleF
553 1382 CircleF
554 1382 CircleF
554 1382 CircleF
554 1428 CircleF
555 1428 CircleF
555 1428 CircleF
556 1428 CircleF
556 1428 CircleF
557 1428 CircleF
557 1474 CircleF
558 1474 CircleF
558 1474 CircleF
559 1474 CircleF
560 1474 CircleF
560 1474 CircleF
561 1520 CircleF
562 1520 CircleF
563 1520 CircleF
564 1520 CircleF
564 1520 CircleF
565 1520 CircleF
566 1565 CircleF
567 1565 CircleF
568 1565 CircleF
569 1565 CircleF
571 1565 CircleF
572 1611 CircleF
573 1611 CircleF
575 1611 CircleF
576 1611 CircleF
577 1611 CircleF
579 1611 CircleF
581 1611 CircleF
582 1657 CircleF
584 1657 CircleF
586 1657 CircleF
588 1657 CircleF
590 1703 CircleF
592 1703 CircleF
595 1703 CircleF
597 1703 CircleF
600 1703 CircleF
602 1703 CircleF
605 1703 CircleF
608 1749 CircleF
611 1749 CircleF
615 1749 CircleF
618 1749 CircleF
622 1749 CircleF
625 1749 CircleF
629 1795 CircleF
634 1795 CircleF
638 1795 CircleF
643 1795 CircleF
647 1841 CircleF
652 1841 CircleF
658 1841 CircleF
663 1841 CircleF
669 1841 CircleF
675 1841 CircleF
682 1841 CircleF
689 1887 CircleF
696 1887 CircleF
703 1887 CircleF
711 1887 CircleF
719 1887 CircleF
728 1933 CircleF
737 1933 CircleF
747 1933 CircleF
757 1933 CircleF
767 1933 CircleF
778 1933 CircleF
790 1979 CircleF
802 1979 CircleF
815 1979 CircleF
828 1979 CircleF
842 1979 CircleF
857 1979 CircleF
873 2025 CircleF
889 2025 CircleF
906 2025 CircleF
924 2025 CircleF
943 2025 CircleF
963 2070 CircleF
984 2070 CircleF
1006 2070 CircleF
1029 2070 CircleF
1053 2070 CircleF
1078 2070 CircleF
1105 2116 CircleF
1133 2116 CircleF
1162 2116 CircleF
1193 2116 CircleF
1225 2116 CircleF
1259 2116 CircleF
1295 2162 CircleF
1333 2162 CircleF
1372 2162 CircleF
1413 2162 CircleF
1457 2162 CircleF
1502 2208 CircleF
1550 2208 CircleF
1600 2208 CircleF
1653 2208 CircleF
1708 2208 CircleF
1766 2208 CircleF
1827 2254 CircleF
1891 2254 CircleF
1959 2254 CircleF
2029 2254 CircleF
2103 2254 CircleF
2181 2254 CircleF
2263 2300 CircleF
2349 2300 CircleF
2439 2300 CircleF
2534 2300 CircleF
2633 2300 CircleF
2737 2300 CircleF
2847 2346 CircleF
2962 2346 CircleF
3083 2346 CircleF
3210 2346 CircleF
3343 2346 CircleF
3483 2392 CircleF
3629 2392 CircleF
3784 2392 CircleF
3945 2392 CircleF
4115 2392 CircleF
4294 2392 CircleF
4481 2438 CircleF
4678 2438 CircleF
4885 2438 CircleF
5102 2438 CircleF
5329 2438 CircleF
5569 2438 CircleF
5820 2484 CircleF
6083 2484 CircleF
6360 2484 CircleF
6651 2484 CircleF
6595 4458 CircleF
% End plot #3
1.000 UL
LTb
LCb setrgbcolor
546 4871 N
546 280 L
6401 0 V
0 4591 V
-6401 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

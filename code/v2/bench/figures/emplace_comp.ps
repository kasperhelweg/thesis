%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./figures/emplace_comp.ps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Thu May 29 20:59:45 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./figures/emplace_comp.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (kasper)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May 29 20:59:45 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
378 280 M
63 0 V
6506 0 R
-63 0 V
294 280 M
( 0) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 1198 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 1) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 2116 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 2) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 3035 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 3) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 3953 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 4) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 4871 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 5) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 280 M
0 63 V
0 4528 R
0 -63 V
378 140 M
( 0) Cshow
1.000 UL
LTb
LCb setrgbcolor
1035 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 100000) Cshow
1.000 UL
LTb
LCb setrgbcolor
1692 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 200000) Cshow
1.000 UL
LTb
LCb setrgbcolor
2349 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 300000) Cshow
1.000 UL
LTb
LCb setrgbcolor
3006 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 400000) Cshow
1.000 UL
LTb
LCb setrgbcolor
3663 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 500000) Cshow
1.000 UL
LTb
LCb setrgbcolor
4319 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 600000) Cshow
1.000 UL
LTb
LCb setrgbcolor
4976 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 700000) Cshow
1.000 UL
LTb
LCb setrgbcolor
5633 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 800000) Cshow
1.000 UL
LTb
LCb setrgbcolor
6290 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 900000) Cshow
1.000 UL
LTb
LCb setrgbcolor
6947 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 1e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
378 4871 N
378 280 L
6569 0 V
0 4591 V
-6569 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.500 UP
1.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
6328 4738 M
(Magic Binary Queue) Rshow
LT0
6412 4738 M
367 0 V
385 2116 M
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
3 0 V
3 0 V
5 0 V
4 0 V
6 0 V
6 0 V
7 0 V
7 0 V
9 0 V
11 0 V
12 0 V
13 0 V
16 0 V
17 0 V
21 0 V
23 0 V
26 0 V
30 0 V
35 0 V
39 0 V
45 0 V
51 0 V
59 0 V
67 0 V
77 0 V
88 0 V
100 0 V
114 0 V
131 0 V
150 0 V
171 0 V
195 0 V
224 0 V
255 0 V
291 0 V
334 0 V
381 0 V
435 0 V
498 0 V
568 0 V
650 0 V
743 0 V
385 2116 TriUF
386 2116 TriUF
387 2116 TriUF
388 2116 TriUF
389 2116 TriUF
391 2116 TriUF
393 2116 TriUF
395 2116 TriUF
397 2116 TriUF
400 2116 TriUF
403 2116 TriUF
406 2116 TriUF
411 2116 TriUF
415 2116 TriUF
421 2116 TriUF
427 2116 TriUF
434 2116 TriUF
441 2116 TriUF
450 2116 TriUF
461 2116 TriUF
473 2116 TriUF
486 2116 TriUF
502 2116 TriUF
519 2116 TriUF
540 2116 TriUF
563 2116 TriUF
589 2116 TriUF
619 2116 TriUF
654 2116 TriUF
693 2116 TriUF
738 2116 TriUF
789 2116 TriUF
848 2116 TriUF
915 2116 TriUF
992 2116 TriUF
1080 2116 TriUF
1180 2116 TriUF
1294 2116 TriUF
1425 2116 TriUF
1575 2116 TriUF
1746 2116 TriUF
1941 2116 TriUF
2165 2116 TriUF
2420 2116 TriUF
2711 2116 TriUF
3045 2116 TriUF
3426 2116 TriUF
3861 2116 TriUF
4359 2116 TriUF
4927 2116 TriUF
5577 2116 TriUF
6320 2116 TriUF
6595 4738 TriUF
% End plot #1
% Begin plot #2
0.500 UP
1.000 UL
LT1
LC1 setrgbcolor
LCb setrgbcolor
6328 4598 M
(Lazy Binary Queue) Rshow
LT1
6412 4598 M
367 0 V
385 280 M
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
3 0 V
3 0 V
5 0 V
4 0 V
6 0 V
6 0 V
7 0 V
7 0 V
9 0 V
11 0 V
12 0 V
13 0 V
16 0 V
17 0 V
21 0 V
23 0 V
26 0 V
30 0 V
35 0 V
39 0 V
45 0 V
51 0 V
59 0 V
67 0 V
77 0 V
88 0 V
100 0 V
114 0 V
131 0 V
150 0 V
171 0 V
195 0 V
224 0 V
255 0 V
291 0 V
334 0 V
381 0 V
435 0 V
498 0 V
568 0 V
650 0 V
743 0 V
385 280 TriU
386 280 TriU
387 280 TriU
388 280 TriU
389 280 TriU
391 280 TriU
393 280 TriU
395 280 TriU
397 280 TriU
400 280 TriU
403 280 TriU
406 280 TriU
411 280 TriU
415 280 TriU
421 280 TriU
427 280 TriU
434 280 TriU
441 280 TriU
450 280 TriU
461 280 TriU
473 280 TriU
486 280 TriU
502 280 TriU
519 280 TriU
540 280 TriU
563 280 TriU
589 280 TriU
619 280 TriU
654 280 TriU
693 280 TriU
738 280 TriU
789 280 TriU
848 280 TriU
915 280 TriU
992 280 TriU
1080 280 TriU
1180 280 TriU
1294 280 TriU
1425 280 TriU
1575 280 TriU
1746 280 TriU
1941 280 TriU
2165 280 TriU
2420 280 TriU
2711 280 TriU
3045 280 TriU
3426 280 TriU
3861 280 TriU
4359 280 TriU
4927 280 TriU
5577 280 TriU
6320 280 TriU
6595 4598 TriU
% End plot #2
% Begin plot #3
0.500 UP
1.000 UL
LT2
LC2 setrgbcolor
LCb setrgbcolor
6328 4458 M
(Eager Binary Queue) Rshow
LT2
6412 4458 M
367 0 V
385 2116 M
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
3 0 V
3 0 V
5 0 V
4 0 V
6 0 V
6 0 V
7 0 V
7 0 V
9 0 V
11 0 V
12 0 V
13 0 V
16 0 V
17 0 V
21 0 V
23 0 V
26 0 V
30 0 V
35 0 V
39 0 V
45 0 V
51 0 V
59 0 V
67 0 V
77 0 V
88 0 V
100 0 V
114 0 V
131 0 V
150 0 V
171 0 V
195 0 V
224 0 V
255 0 V
291 0 V
334 0 V
381 0 V
435 0 V
498 0 V
568 0 V
650 0 V
743 0 V
385 2116 CircleF
386 2116 CircleF
387 2116 CircleF
388 2116 CircleF
389 2116 CircleF
391 2116 CircleF
393 2116 CircleF
395 2116 CircleF
397 2116 CircleF
400 2116 CircleF
403 2116 CircleF
406 2116 CircleF
411 2116 CircleF
415 2116 CircleF
421 2116 CircleF
427 2116 CircleF
434 2116 CircleF
441 2116 CircleF
450 2116 CircleF
461 2116 CircleF
473 2116 CircleF
486 2116 CircleF
502 2116 CircleF
519 2116 CircleF
540 2116 CircleF
563 2116 CircleF
589 2116 CircleF
619 2116 CircleF
654 2116 CircleF
693 2116 CircleF
738 2116 CircleF
789 2116 CircleF
848 2116 CircleF
915 2116 CircleF
992 2116 CircleF
1080 2116 CircleF
1180 2116 CircleF
1294 2116 CircleF
1425 2116 CircleF
1575 2116 CircleF
1746 2116 CircleF
1941 2116 CircleF
2165 2116 CircleF
2420 2116 CircleF
2711 2116 CircleF
3045 2116 CircleF
3426 2116 CircleF
3861 2116 CircleF
4359 2116 CircleF
4927 2116 CircleF
5577 2116 CircleF
6320 2116 CircleF
6595 4458 CircleF
% End plot #3
% Begin plot #4
0.500 UP
1.000 UL
LT3
0.00 0.55 0.55 C LCb setrgbcolor
6328 4318 M
(Boost Binomial Queue) Rshow
LT3
0.00 0.55 0.55 C 6412 4318 M
367 0 V
385 1198 M
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
3 0 V
3 0 V
5 0 V
4 0 V
6 0 V
6 0 V
7 0 V
7 0 V
9 0 V
11 0 V
12 0 V
13 0 V
16 0 V
17 0 V
21 0 V
23 0 V
26 0 V
30 0 V
35 0 V
39 0 V
45 0 V
51 0 V
59 0 V
67 0 V
77 0 V
88 0 V
100 0 V
114 0 V
131 0 V
150 0 V
171 0 V
195 0 V
224 0 V
255 0 V
291 0 V
334 0 V
381 0 V
435 0 V
498 0 V
568 0 V
650 0 V
743 0 V
385 1198 Circle
386 1198 Circle
387 1198 Circle
388 1198 Circle
389 1198 Circle
391 1198 Circle
393 1198 Circle
395 1198 Circle
397 1198 Circle
400 1198 Circle
403 1198 Circle
406 1198 Circle
411 1198 Circle
415 1198 Circle
421 1198 Circle
427 1198 Circle
434 1198 Circle
441 1198 Circle
450 1198 Circle
461 1198 Circle
473 1198 Circle
486 1198 Circle
502 1198 Circle
519 1198 Circle
540 1198 Circle
563 1198 Circle
589 1198 Circle
619 1198 Circle
654 1198 Circle
693 1198 Circle
738 1198 Circle
789 1198 Circle
848 1198 Circle
915 1198 Circle
992 1198 Circle
1080 1198 Circle
1180 1198 Circle
1294 1198 Circle
1425 1198 Circle
1575 1198 Circle
1746 1198 Circle
1941 1198 Circle
2165 1198 Circle
2420 1198 Circle
2711 1198 Circle
3045 1198 Circle
3426 1198 Circle
3861 1198 Circle
4359 1198 Circle
4927 1198 Circle
5577 1198 Circle
6320 1198 Circle
6595 4318 Circle
% End plot #4
% Begin plot #5
0.500 UP
1.000 UL
LT4
0.85 0.65 0.13 C LCb setrgbcolor
6328 4178 M
(Boost Fibonacci Heap) Rshow
LT4
0.85 0.65 0.13 C 6412 4178 M
367 0 V
385 280 M
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
3 0 V
3 0 V
5 0 V
4 0 V
6 0 V
6 0 V
7 0 V
7 0 V
9 0 V
11 0 V
12 0 V
13 0 V
16 0 V
17 0 V
21 0 V
23 0 V
26 0 V
30 0 V
35 0 V
39 0 V
45 0 V
51 0 V
59 0 V
67 0 V
77 0 V
88 0 V
100 0 V
114 0 V
131 0 V
150 0 V
171 0 V
195 0 V
224 0 V
255 0 V
291 0 V
334 0 V
381 0 V
435 0 V
498 0 V
568 0 V
650 0 V
743 0 V
385 280 BoxF
386 280 BoxF
387 280 BoxF
388 280 BoxF
389 280 BoxF
391 280 BoxF
393 280 BoxF
395 280 BoxF
397 280 BoxF
400 280 BoxF
403 280 BoxF
406 280 BoxF
411 280 BoxF
415 280 BoxF
421 280 BoxF
427 280 BoxF
434 280 BoxF
441 280 BoxF
450 280 BoxF
461 280 BoxF
473 280 BoxF
486 280 BoxF
502 280 BoxF
519 280 BoxF
540 280 BoxF
563 280 BoxF
589 280 BoxF
619 280 BoxF
654 280 BoxF
693 280 BoxF
738 280 BoxF
789 280 BoxF
848 280 BoxF
915 280 BoxF
992 280 BoxF
1080 280 BoxF
1180 280 BoxF
1294 280 BoxF
1425 280 BoxF
1575 280 BoxF
1746 280 BoxF
1941 280 BoxF
2165 280 BoxF
2420 280 BoxF
2711 280 BoxF
3045 280 BoxF
3426 280 BoxF
3861 280 BoxF
4359 280 BoxF
4927 280 BoxF
5577 280 BoxF
6320 280 BoxF
6595 4178 BoxF
% End plot #5
1.000 UL
LTb
LCb setrgbcolor
378 4871 N
378 280 L
6569 0 V
0 4591 V
-6569 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

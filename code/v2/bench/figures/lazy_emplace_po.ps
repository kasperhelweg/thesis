%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./figures/lazy_emplace_po.ps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Mon May 26 22:18:21 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./figures/lazy_emplace_po.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (kasper)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon May 26 22:18:21 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
630 280 M
63 0 V
6254 0 R
-63 0 V
546 280 M
( 0.02) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 1045 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.04) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 1810 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.06) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 2576 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.08) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 3341 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.1) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 4106 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.12) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 4871 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.14) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 280 M
0 63 V
0 4528 R
0 -63 V
630 140 M
( 1000) Cshow
1.000 UL
LTb
LCb setrgbcolor
1105 280 M
0 31 V
0 4560 R
0 -31 V
1734 280 M
0 31 V
0 4560 R
0 -31 V
2056 280 M
0 31 V
0 4560 R
0 -31 V
2209 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 10000) Cshow
1.000 UL
LTb
LCb setrgbcolor
2685 280 M
0 31 V
0 4560 R
0 -31 V
3313 280 M
0 31 V
0 4560 R
0 -31 V
3635 280 M
0 31 V
0 4560 R
0 -31 V
3789 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 100000) Cshow
1.000 UL
LTb
LCb setrgbcolor
4264 280 M
0 31 V
0 4560 R
0 -31 V
4892 280 M
0 31 V
0 4560 R
0 -31 V
5215 280 M
0 31 V
0 4560 R
0 -31 V
5368 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 1e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
5843 280 M
0 31 V
0 4560 R
0 -31 V
6472 280 M
0 31 V
0 4560 R
0 -31 V
6794 280 M
0 31 V
0 4560 R
0 -31 V
6947 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 1e+07) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
630 4871 N
630 280 L
6317 0 V
0 4591 V
-6317 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.500 UP
1.000 UL
LT0
0.50 0.50 0.00 C LCb setrgbcolor
6328 4738 M
(Lazy Binary Queue - Vector) Rshow
LT0
0.50 0.50 0.00 C 6412 4738 M
367 0 V
630 601 M
65 -71 V
66 3 V
65 -12 V
65 3 V
66 3 V
65 -5 V
65 6 V
65 -2 V
66 -8 V
65 1 V
65 5 V
66 1 V
65 4 V
65 -1 V
66 -6 V
65 7 V
65 -4 V
65 6 V
66 -1 V
65 13 V
65 -9 V
66 2 V
65 2 V
65 5 V
66 0 V
65 1 V
65 0 V
66 5 V
65 -2 V
65 2 V
66 0 V
65 0 V
66 2 V
65 22 V
65 -20 V
66 4 V
65 69 V
65 186 V
66 -134 V
65 6 V
65 41 V
66 172 V
65 13 V
65 105 V
66 127 V
65 161 V
66 168 V
65 118 V
65 121 V
66 87 V
65 34 V
65 93 V
66 60 V
65 48 V
66 73 V
65 49 V
65 80 V
66 92 V
65 58 V
65 62 V
66 23 V
65 84 V
65 45 V
66 -20 V
65 3 V
66 87 V
65 26 V
65 103 V
66 49 V
65 -31 V
65 127 V
66 90 V
630 601 TriU
695 530 TriU
761 533 TriU
826 521 TriU
891 524 TriU
957 527 TriU
1022 522 TriU
1087 528 TriU
1152 526 TriU
1218 518 TriU
1283 519 TriU
1348 524 TriU
1414 525 TriU
1479 529 TriU
1544 528 TriU
1610 522 TriU
1675 529 TriU
1740 525 TriU
1805 531 TriU
1871 530 TriU
1936 543 TriU
2001 534 TriU
2067 536 TriU
2132 538 TriU
2197 543 TriU
2263 543 TriU
2328 544 TriU
2393 544 TriU
2459 549 TriU
2524 547 TriU
2589 549 TriU
2655 549 TriU
2720 549 TriU
2786 551 TriU
2851 573 TriU
2916 553 TriU
2982 557 TriU
3047 626 TriU
3112 812 TriU
3178 678 TriU
3243 684 TriU
3308 725 TriU
3374 897 TriU
3439 910 TriU
3504 1015 TriU
3570 1142 TriU
3635 1303 TriU
3701 1471 TriU
3766 1589 TriU
3831 1710 TriU
3897 1797 TriU
3962 1831 TriU
4027 1924 TriU
4093 1984 TriU
4158 2032 TriU
4224 2105 TriU
4289 2154 TriU
4354 2234 TriU
4420 2326 TriU
4485 2384 TriU
4550 2446 TriU
4616 2469 TriU
4681 2553 TriU
4746 2598 TriU
4812 2578 TriU
4877 2581 TriU
4943 2668 TriU
5008 2694 TriU
5073 2797 TriU
5139 2846 TriU
5204 2815 TriU
5269 2942 TriU
5335 3032 TriU
6595 4738 TriU
% End plot #1
% Begin plot #2
0.500 UP
1.000 UL
LT1
0.86 0.08 0.24 C LCb setrgbcolor
6328 4598 M
(Lazy Binary Queue - List) Rshow
LT1
0.86 0.08 0.24 C 6412 4598 M
367 0 V
630 1359 M
65 -119 V
66 -11 V
65 -7 V
65 2 V
66 11 V
65 -5 V
65 -10 V
65 6 V
66 -6 V
65 11 V
65 -1 V
66 -2 V
65 4 V
65 12 V
66 -1 V
65 0 V
65 -3 V
65 -3 V
66 7 V
65 -3 V
65 29 V
66 -28 V
65 3 V
65 -1 V
66 1 V
65 -2 V
65 2 V
66 -1 V
65 3 V
65 44 V
66 -42 V
65 -3 V
66 3 V
65 -5 V
65 1 V
66 2 V
65 195 V
65 -71 V
66 320 V
65 218 V
65 157 V
66 196 V
65 268 V
65 217 V
66 85 V
65 129 V
66 97 V
65 79 V
65 71 V
66 63 V
65 97 V
65 50 V
66 40 V
65 31 V
66 115 V
65 94 V
65 85 V
66 274 V
65 55 V
65 -15 V
66 10 V
65 19 V
65 10 V
66 -29 V
65 170 V
66 -64 V
65 360 V
65 -340 V
66 63 V
65 81 V
65 -84 V
66 50 V
630 1359 TriUF
695 1240 TriUF
761 1229 TriUF
826 1222 TriUF
891 1224 TriUF
957 1235 TriUF
1022 1230 TriUF
1087 1220 TriUF
1152 1226 TriUF
1218 1220 TriUF
1283 1231 TriUF
1348 1230 TriUF
1414 1228 TriUF
1479 1232 TriUF
1544 1244 TriUF
1610 1243 TriUF
1675 1243 TriUF
1740 1240 TriUF
1805 1237 TriUF
1871 1244 TriUF
1936 1241 TriUF
2001 1270 TriUF
2067 1242 TriUF
2132 1245 TriUF
2197 1244 TriUF
2263 1245 TriUF
2328 1243 TriUF
2393 1245 TriUF
2459 1244 TriUF
2524 1247 TriUF
2589 1291 TriUF
2655 1249 TriUF
2720 1246 TriUF
2786 1249 TriUF
2851 1244 TriUF
2916 1245 TriUF
2982 1247 TriUF
3047 1442 TriUF
3112 1371 TriUF
3178 1691 TriUF
3243 1909 TriUF
3308 2066 TriUF
3374 2262 TriUF
3439 2530 TriUF
3504 2747 TriUF
3570 2832 TriUF
3635 2961 TriUF
3701 3058 TriUF
3766 3137 TriUF
3831 3208 TriUF
3897 3271 TriUF
3962 3368 TriUF
4027 3418 TriUF
4093 3458 TriUF
4158 3489 TriUF
4224 3604 TriUF
4289 3698 TriUF
4354 3783 TriUF
4420 4057 TriUF
4485 4112 TriUF
4550 4097 TriUF
4616 4107 TriUF
4681 4126 TriUF
4746 4136 TriUF
4812 4107 TriUF
4877 4277 TriUF
4943 4213 TriUF
5008 4573 TriUF
5073 4233 TriUF
5139 4296 TriUF
5204 4377 TriUF
5269 4293 TriUF
5335 4343 TriUF
6595 4598 TriUF
% End plot #2
% Begin plot #3
0.500 UP
1.000 UL
LT2
0.54 0.17 0.89 C LCb setrgbcolor
6328 4458 M
(Boost Fibonacci) Rshow
LT2
0.54 0.17 0.89 C 6412 4458 M
367 0 V
630 739 M
695 600 L
66 -4 V
65 0 V
65 -10 V
66 8 V
65 -8 V
65 1 V
65 3 V
66 0 V
65 -6 V
65 -3 V
66 18 V
65 -12 V
65 1 V
66 -5 V
65 1 V
65 3 V
65 -2 V
66 0 V
65 0 V
65 -5 V
66 9 V
65 -7 V
65 2 V
66 3 V
65 -7 V
65 7 V
66 -5 V
65 -1 V
65 2 V
66 -5 V
65 -2 V
66 3 V
65 6 V
65 -6 V
66 3 V
65 4 V
65 2 V
66 10 V
65 5 V
65 -2 V
66 5 V
65 7 V
65 4 V
66 1 V
65 4 V
66 5 V
65 1 V
65 3 V
66 2 V
65 7 V
65 -3 V
66 2 V
65 6 V
66 1 V
65 0 V
65 3 V
66 1 V
65 1 V
65 2 V
66 1 V
65 8 V
65 -6 V
66 15 V
65 40 V
66 0 V
65 1 V
65 -1 V
66 1 V
65 1 V
65 3 V
66 -4 V
630 739 CircleF
695 600 CircleF
761 596 CircleF
826 596 CircleF
891 586 CircleF
957 594 CircleF
1022 586 CircleF
1087 587 CircleF
1152 590 CircleF
1218 590 CircleF
1283 584 CircleF
1348 581 CircleF
1414 599 CircleF
1479 587 CircleF
1544 588 CircleF
1610 583 CircleF
1675 584 CircleF
1740 587 CircleF
1805 585 CircleF
1871 585 CircleF
1936 585 CircleF
2001 580 CircleF
2067 589 CircleF
2132 582 CircleF
2197 584 CircleF
2263 587 CircleF
2328 580 CircleF
2393 587 CircleF
2459 582 CircleF
2524 581 CircleF
2589 583 CircleF
2655 578 CircleF
2720 576 CircleF
2786 579 CircleF
2851 585 CircleF
2916 579 CircleF
2982 582 CircleF
3047 586 CircleF
3112 588 CircleF
3178 598 CircleF
3243 603 CircleF
3308 601 CircleF
3374 606 CircleF
3439 613 CircleF
3504 617 CircleF
3570 618 CircleF
3635 622 CircleF
3701 627 CircleF
3766 628 CircleF
3831 631 CircleF
3897 633 CircleF
3962 640 CircleF
4027 637 CircleF
4093 639 CircleF
4158 645 CircleF
4224 646 CircleF
4289 646 CircleF
4354 649 CircleF
4420 650 CircleF
4485 651 CircleF
4550 653 CircleF
4616 654 CircleF
4681 662 CircleF
4746 656 CircleF
4812 671 CircleF
4877 711 CircleF
4943 711 CircleF
5008 712 CircleF
5073 711 CircleF
5139 712 CircleF
5204 713 CircleF
5269 716 CircleF
5335 712 CircleF
6595 4458 CircleF
% End plot #3
1.000 UL
LTb
LCb setrgbcolor
630 4871 N
630 280 L
6317 0 V
0 4591 V
-6317 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

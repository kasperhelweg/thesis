%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./figures/seq_b_po.ps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Mon May 26 22:18:21 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./figures/seq_b_po.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (kasper)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon May 26 22:18:21 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
378 280 M
63 0 V
6506 0 R
-63 0 V
294 280 M
( 0) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 936 M
63 0 V
6506 0 R
-63 0 V
294 936 M
( 1) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 1592 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 2) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 2248 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 3) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 2903 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 4) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 3559 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 5) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 4215 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 6) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 4871 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 7) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 280 M
0 63 V
0 4528 R
0 -63 V
378 140 M
( 1000) Cshow
1.000 UL
LTb
LCb setrgbcolor
872 280 M
0 31 V
0 4560 R
0 -31 V
1526 280 M
0 31 V
0 4560 R
0 -31 V
1861 280 M
0 31 V
0 4560 R
0 -31 V
2020 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 10000) Cshow
1.000 UL
LTb
LCb setrgbcolor
2515 280 M
0 31 V
0 4560 R
0 -31 V
3168 280 M
0 31 V
0 4560 R
0 -31 V
3503 280 M
0 31 V
0 4560 R
0 -31 V
3663 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 100000) Cshow
1.000 UL
LTb
LCb setrgbcolor
4157 280 M
0 31 V
0 4560 R
0 -31 V
4810 280 M
0 31 V
0 4560 R
0 -31 V
5146 280 M
0 31 V
0 4560 R
0 -31 V
5305 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 1e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
5799 280 M
0 31 V
0 4560 R
0 -31 V
6453 280 M
0 31 V
0 4560 R
0 -31 V
6788 280 M
0 31 V
0 4560 R
0 -31 V
6947 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 1e+07) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
378 4871 N
378 280 L
6569 0 V
0 4591 V
-6569 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.500 UP
1.000 UL
LT0
0.00 0.50 0.00 C % End plot #1
% Begin plot #2
0.500 UP
1.000 UL
LT1
0.86 0.08 0.24 C LCb setrgbcolor
6328 4738 M
(Lazy Binary Queue) Rshow
LT1
0.86 0.08 0.24 C 6412 4738 M
367 0 V
378 996 M
68 4 V
68 226 V
68 -41 V
68 -140 V
68 -2 V
68 16 V
68 18 V
67 -3 V
68 9 V
68 6 V
68 15 V
68 14 V
68 13 V
68 20 V
68 -4 V
68 58 V
67 -8 V
68 5 V
68 33 V
68 13 V
68 11 V
68 7 V
68 2 V
68 46 V
68 0 V
68 34 V
68 102 V
68 72 V
68 50 V
68 17 V
68 36 V
68 41 V
68 57 V
67 62 V
68 30 V
68 53 V
68 74 V
68 0 V
68 53 V
68 -3 V
68 48 V
68 69 V
68 56 V
68 41 V
68 22 V
68 66 V
68 117 V
68 124 V
68 52 V
68 4 V
68 125 V
68 93 V
68 -14 V
68 82 V
68 41 V
68 293 V
68 13 V
68 65 V
68 338 V
68 47 V
68 -109 V
68 3 V
68 194 V
68 105 V
68 -5 V
68 15 V
68 25 V
68 -23 V
68 152 V
68 81 V
68 214 V
67 -65 V
378 996 TriUF
446 1000 TriUF
514 1226 TriUF
582 1185 TriUF
650 1045 TriUF
718 1043 TriUF
786 1059 TriUF
854 1077 TriUF
921 1074 TriUF
989 1083 TriUF
1057 1089 TriUF
1125 1104 TriUF
1193 1118 TriUF
1261 1131 TriUF
1329 1151 TriUF
1397 1147 TriUF
1465 1205 TriUF
1532 1197 TriUF
1600 1202 TriUF
1668 1235 TriUF
1736 1248 TriUF
1804 1259 TriUF
1872 1266 TriUF
1940 1268 TriUF
2008 1314 TriUF
2076 1314 TriUF
2144 1348 TriUF
2212 1450 TriUF
2280 1522 TriUF
2348 1572 TriUF
2416 1589 TriUF
2484 1625 TriUF
2552 1666 TriUF
2620 1723 TriUF
2687 1785 TriUF
2755 1815 TriUF
2823 1868 TriUF
2891 1942 TriUF
2959 1942 TriUF
3027 1995 TriUF
3095 1992 TriUF
3163 2040 TriUF
3231 2109 TriUF
3299 2165 TriUF
3367 2206 TriUF
3435 2228 TriUF
3503 2294 TriUF
3571 2411 TriUF
3639 2535 TriUF
3707 2587 TriUF
3775 2591 TriUF
3843 2716 TriUF
3911 2809 TriUF
3979 2795 TriUF
4047 2877 TriUF
4115 2918 TriUF
4183 3211 TriUF
4251 3224 TriUF
4319 3289 TriUF
4387 3627 TriUF
4455 3674 TriUF
4523 3565 TriUF
4591 3568 TriUF
4659 3762 TriUF
4727 3867 TriUF
4795 3862 TriUF
4863 3877 TriUF
4931 3902 TriUF
4999 3879 TriUF
5067 4031 TriUF
5135 4112 TriUF
5203 4326 TriUF
5270 4261 TriUF
6595 4738 TriUF
% End plot #2
% Begin plot #3
0.500 UP
1.000 UL
LT2
0.54 0.17 0.89 C % End plot #3
% Begin plot #4
0.500 UP
1.000 UL
LT3
0.00 0.55 0.55 C LCb setrgbcolor
6328 4598 M
(Boost Binomial Queue) Rshow
LT3
0.00 0.55 0.55 C 6412 4598 M
367 0 V
378 1299 M
68 11 V
68 25 V
68 -21 V
68 17 V
68 18 V
68 18 V
68 16 V
67 14 V
68 2 V
68 16 V
68 6 V
68 28 V
68 19 V
68 13 V
68 11 V
68 13 V
67 2 V
68 18 V
68 29 V
68 14 V
68 21 V
68 14 V
68 9 V
68 9 V
68 6 V
68 10 V
68 33 V
68 10 V
68 16 V
68 13 V
68 8 V
68 14 V
68 34 V
67 -29 V
68 -7 V
68 21 V
68 17 V
68 25 V
68 26 V
68 17 V
68 49 V
68 79 V
68 103 V
68 47 V
68 51 V
68 24 V
68 72 V
68 59 V
68 112 V
68 82 V
68 0 V
68 35 V
68 -3 V
68 143 V
68 27 V
68 151 V
68 180 V
68 19 V
68 289 V
68 -166 V
68 -83 V
68 -90 V
68 92 V
68 7 V
68 231 V
68 -3 V
68 -78 V
68 436 V
68 -65 V
68 125 V
68 19 V
67 162 V
378 1299 Circle
446 1310 Circle
514 1335 Circle
582 1314 Circle
650 1331 Circle
718 1349 Circle
786 1367 Circle
854 1383 Circle
921 1397 Circle
989 1399 Circle
1057 1415 Circle
1125 1421 Circle
1193 1449 Circle
1261 1468 Circle
1329 1481 Circle
1397 1492 Circle
1465 1505 Circle
1532 1507 Circle
1600 1525 Circle
1668 1554 Circle
1736 1568 Circle
1804 1589 Circle
1872 1603 Circle
1940 1612 Circle
2008 1621 Circle
2076 1627 Circle
2144 1637 Circle
2212 1670 Circle
2280 1680 Circle
2348 1696 Circle
2416 1709 Circle
2484 1717 Circle
2552 1731 Circle
2620 1765 Circle
2687 1736 Circle
2755 1729 Circle
2823 1750 Circle
2891 1767 Circle
2959 1792 Circle
3027 1818 Circle
3095 1835 Circle
3163 1884 Circle
3231 1963 Circle
3299 2066 Circle
3367 2113 Circle
3435 2164 Circle
3503 2188 Circle
3571 2260 Circle
3639 2319 Circle
3707 2431 Circle
3775 2513 Circle
3843 2513 Circle
3911 2548 Circle
3979 2545 Circle
4047 2688 Circle
4115 2715 Circle
4183 2866 Circle
4251 3046 Circle
4319 3065 Circle
4387 3354 Circle
4455 3188 Circle
4523 3105 Circle
4591 3015 Circle
4659 3107 Circle
4727 3114 Circle
4795 3345 Circle
4863 3342 Circle
4931 3264 Circle
4999 3700 Circle
5067 3635 Circle
5135 3760 Circle
5203 3779 Circle
5270 3941 Circle
6595 4598 Circle
% End plot #4
% Begin plot #5
0.500 UP
1.000 UL
LT4
0.85 0.65 0.13 C LCb setrgbcolor
6328 4458 M
(Boost Fibonacci Heap) Rshow
LT4
0.85 0.65 0.13 C 6412 4458 M
367 0 V
378 664 M
68 5 V
68 1 V
68 3 V
68 10 V
68 108 V
786 681 L
68 4 V
67 5 V
68 5 V
68 8 V
68 -1 V
68 8 V
68 0 V
68 7 V
68 4 V
68 5 V
67 2 V
68 1 V
68 6 V
68 7 V
68 4 V
68 4 V
68 3 V
68 5 V
68 2 V
68 2 V
68 5 V
68 4 V
68 16 V
68 -12 V
68 4 V
68 10 V
68 -4 V
67 26 V
68 19 V
68 21 V
68 27 V
68 37 V
68 15 V
68 10 V
68 36 V
68 15 V
68 19 V
68 22 V
68 20 V
68 16 V
68 18 V
68 42 V
68 12 V
68 9 V
68 17 V
68 -9 V
68 6 V
68 16 V
68 -30 V
68 23 V
68 16 V
68 51 V
68 -1 V
68 47 V
68 -5 V
68 -10 V
68 21 V
68 27 V
68 19 V
68 20 V
68 30 V
68 0 V
68 16 V
68 48 V
68 22 V
67 5 V
378 664 BoxF
446 669 BoxF
514 670 BoxF
582 673 BoxF
650 683 BoxF
718 791 BoxF
786 681 BoxF
854 685 BoxF
921 690 BoxF
989 695 BoxF
1057 703 BoxF
1125 702 BoxF
1193 710 BoxF
1261 710 BoxF
1329 717 BoxF
1397 721 BoxF
1465 726 BoxF
1532 728 BoxF
1600 729 BoxF
1668 735 BoxF
1736 742 BoxF
1804 746 BoxF
1872 750 BoxF
1940 753 BoxF
2008 758 BoxF
2076 760 BoxF
2144 762 BoxF
2212 767 BoxF
2280 771 BoxF
2348 787 BoxF
2416 775 BoxF
2484 779 BoxF
2552 789 BoxF
2620 785 BoxF
2687 811 BoxF
2755 830 BoxF
2823 851 BoxF
2891 878 BoxF
2959 915 BoxF
3027 930 BoxF
3095 940 BoxF
3163 976 BoxF
3231 991 BoxF
3299 1010 BoxF
3367 1032 BoxF
3435 1052 BoxF
3503 1068 BoxF
3571 1086 BoxF
3639 1128 BoxF
3707 1140 BoxF
3775 1149 BoxF
3843 1166 BoxF
3911 1157 BoxF
3979 1163 BoxF
4047 1179 BoxF
4115 1149 BoxF
4183 1172 BoxF
4251 1188 BoxF
4319 1239 BoxF
4387 1238 BoxF
4455 1285 BoxF
4523 1280 BoxF
4591 1270 BoxF
4659 1291 BoxF
4727 1318 BoxF
4795 1337 BoxF
4863 1357 BoxF
4931 1387 BoxF
4999 1387 BoxF
5067 1403 BoxF
5135 1451 BoxF
5203 1473 BoxF
5270 1478 BoxF
6595 4458 BoxF
% End plot #5
1.000 UL
LTb
LCb setrgbcolor
378 4871 N
378 280 L
6569 0 V
0 4591 V
-6569 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

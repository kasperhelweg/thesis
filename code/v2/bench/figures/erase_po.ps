%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./figures/erase_po.ps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Thu May 29 20:59:44 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./figures/erase_po.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (kasper)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May 29 20:59:44 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
378 280 M
63 0 V
6506 0 R
-63 0 V
294 280 M
( 0) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 936 M
63 0 V
6506 0 R
-63 0 V
294 936 M
( 1) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 1592 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 2) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 2248 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 3) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 2903 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 4) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 3559 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 5) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 4215 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 6) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 4871 M
63 0 V
6506 0 R
-63 0 V
-6590 0 R
( 7) Rshow
1.000 UL
LTb
LCb setrgbcolor
378 280 M
0 63 V
0 4528 R
0 -63 V
378 140 M
( 1000) Cshow
1.000 UL
LTb
LCb setrgbcolor
872 280 M
0 31 V
0 4560 R
0 -31 V
1526 280 M
0 31 V
0 4560 R
0 -31 V
1861 280 M
0 31 V
0 4560 R
0 -31 V
2020 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 10000) Cshow
1.000 UL
LTb
LCb setrgbcolor
2515 280 M
0 31 V
0 4560 R
0 -31 V
3168 280 M
0 31 V
0 4560 R
0 -31 V
3503 280 M
0 31 V
0 4560 R
0 -31 V
3663 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 100000) Cshow
1.000 UL
LTb
LCb setrgbcolor
4157 280 M
0 31 V
0 4560 R
0 -31 V
4810 280 M
0 31 V
0 4560 R
0 -31 V
5146 280 M
0 31 V
0 4560 R
0 -31 V
5305 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 1e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
5799 280 M
0 31 V
0 4560 R
0 -31 V
6453 280 M
0 31 V
0 4560 R
0 -31 V
6788 280 M
0 31 V
0 4560 R
0 -31 V
6947 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 1e+07) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
378 4871 N
378 280 L
6569 0 V
0 4591 V
-6569 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.500 UP
1.000 UL
LT0
0.86 0.08 0.24 C LCb setrgbcolor
6328 4738 M
(Magic Binary Queue) Rshow
LT0
0.86 0.08 0.24 C 6412 4738 M
367 0 V
378 372 M
95 -1 V
95 0 V
95 1 V
95 0 V
95 1 V
95 0 V
95 0 V
96 1 V
95 0 V
95 1 V
95 0 V
95 1 V
96 1 V
95 2 V
95 2 V
95 1 V
95 1 V
96 2 V
95 1 V
95 1 V
95 1 V
95 1 V
96 2 V
95 0 V
95 1 V
95 1 V
96 1 V
95 1 V
95 4 V
95 4 V
95 6 V
96 14 V
95 10 V
95 13 V
95 15 V
96 12 V
95 14 V
95 13 V
95 15 V
96 11 V
95 11 V
95 14 V
95 15 V
96 10 V
95 9 V
95 4 V
95 7 V
95 8 V
96 6 V
95 7 V
95 6 V
378 372 TriUF
473 371 TriUF
568 371 TriUF
663 372 TriUF
758 372 TriUF
853 373 TriUF
948 373 TriUF
1043 373 TriUF
1139 374 TriUF
1234 374 TriUF
1329 375 TriUF
1424 375 TriUF
1519 376 TriUF
1615 377 TriUF
1710 379 TriUF
1805 381 TriUF
1900 382 TriUF
1995 383 TriUF
2091 385 TriUF
2186 386 TriUF
2281 387 TriUF
2376 388 TriUF
2471 389 TriUF
2567 391 TriUF
2662 391 TriUF
2757 392 TriUF
2852 393 TriUF
2948 394 TriUF
3043 395 TriUF
3138 399 TriUF
3233 403 TriUF
3328 409 TriUF
3424 423 TriUF
3519 433 TriUF
3614 446 TriUF
3709 461 TriUF
3805 473 TriUF
3900 487 TriUF
3995 500 TriUF
4090 515 TriUF
4186 526 TriUF
4281 537 TriUF
4376 551 TriUF
4471 566 TriUF
4567 576 TriUF
4662 585 TriUF
4757 589 TriUF
4852 596 TriUF
4947 604 TriUF
5043 610 TriUF
5138 617 TriUF
5233 623 TriUF
6595 4738 TriUF
% End plot #1
% Begin plot #2
0.500 UP
1.000 UL
LT1
0.00 0.50 0.00 C LCb setrgbcolor
6328 4598 M
(Regular Binary Queue) Rshow
LT1
0.00 0.50 0.00 C 6412 4598 M
367 0 V
378 472 M
95 4 V
95 1 V
95 12 V
95 -10 V
95 0 V
95 5 V
95 6 V
96 1 V
95 -4 V
95 12 V
95 1 V
95 2 V
96 0 V
95 7 V
95 5 V
95 11 V
95 0 V
96 3 V
95 6 V
95 8 V
95 5 V
95 -2 V
96 12 V
95 2 V
95 3 V
95 7 V
96 12 V
95 8 V
95 17 V
95 20 V
95 19 V
96 23 V
95 17 V
95 16 V
95 2 V
96 65 V
95 4 V
95 25 V
95 27 V
96 15 V
95 14 V
95 24 V
95 17 V
96 15 V
95 26 V
95 17 V
95 11 V
95 12 V
96 20 V
95 29 V
95 44 V
378 472 Box
473 476 Box
568 477 Box
663 489 Box
758 479 Box
853 479 Box
948 484 Box
1043 490 Box
1139 491 Box
1234 487 Box
1329 499 Box
1424 500 Box
1519 502 Box
1615 502 Box
1710 509 Box
1805 514 Box
1900 525 Box
1995 525 Box
2091 528 Box
2186 534 Box
2281 542 Box
2376 547 Box
2471 545 Box
2567 557 Box
2662 559 Box
2757 562 Box
2852 569 Box
2948 581 Box
3043 589 Box
3138 606 Box
3233 626 Box
3328 645 Box
3424 668 Box
3519 685 Box
3614 701 Box
3709 703 Box
3805 768 Box
3900 772 Box
3995 797 Box
4090 824 Box
4186 839 Box
4281 853 Box
4376 877 Box
4471 894 Box
4567 909 Box
4662 935 Box
4757 952 Box
4852 963 Box
4947 975 Box
5043 995 Box
5138 1024 Box
5233 1068 Box
6595 4598 Box
% End plot #2
% Begin plot #3
0.500 UP
1.000 UL
LT2
0.50 0.50 0.00 C LCb setrgbcolor
6328 4458 M
(Lazy Binary Queue) Rshow
LT2
0.50 0.50 0.00 C 6412 4458 M
367 0 V
378 4274 M
473 423 L
95 5 V
95 4 V
95 6 V
95 4 V
95 7 V
95 4 V
96 6 V
95 4 V
95 4 V
95 6 V
95 4 V
96 4 V
95 3 V
95 4 V
95 4 V
95 3 V
96 3 V
95 4 V
95 4 V
95 5 V
95 7 V
96 12 V
95 9 V
95 12 V
95 20 V
96 17 V
95 17 V
95 13 V
95 16 V
95 25 V
96 23 V
95 15 V
95 15 V
95 13 V
96 15 V
95 20 V
95 9 V
95 7 V
96 6 V
95 12 V
95 10 V
95 -5 V
96 3 V
95 11 V
95 8 V
95 -1 V
95 0 V
96 10 V
95 -8 V
95 -22 V
378 4274 TriU
473 423 TriU
568 428 TriU
663 432 TriU
758 438 TriU
853 442 TriU
948 449 TriU
1043 453 TriU
1139 459 TriU
1234 463 TriU
1329 467 TriU
1424 473 TriU
1519 477 TriU
1615 481 TriU
1710 484 TriU
1805 488 TriU
1900 492 TriU
1995 495 TriU
2091 498 TriU
2186 502 TriU
2281 506 TriU
2376 511 TriU
2471 518 TriU
2567 530 TriU
2662 539 TriU
2757 551 TriU
2852 571 TriU
2948 588 TriU
3043 605 TriU
3138 618 TriU
3233 634 TriU
3328 659 TriU
3424 682 TriU
3519 697 TriU
3614 712 TriU
3709 725 TriU
3805 740 TriU
3900 760 TriU
3995 769 TriU
4090 776 TriU
4186 782 TriU
4281 794 TriU
4376 804 TriU
4471 799 TriU
4567 802 TriU
4662 813 TriU
4757 821 TriU
4852 820 TriU
4947 820 TriU
5043 830 TriU
5138 822 TriU
5233 800 TriU
6595 4458 TriU
% End plot #3
% Begin plot #4
0.500 UP
1.000 UL
LT3
0.54 0.17 0.89 C LCb setrgbcolor
6328 4318 M
(Eager Binary Queue) Rshow
LT3
0.54 0.17 0.89 C 6412 4318 M
367 0 V
378 348 M
95 0 V
95 5 V
95 6 V
95 6 V
95 -14 V
95 0 V
95 -1 V
96 0 V
95 2 V
95 4 V
95 -4 V
95 1 V
96 13 V
95 -10 V
95 7 V
95 2 V
95 -3 V
96 11 V
95 -3 V
95 12 V
95 -3 V
95 2 V
96 0 V
95 -4 V
95 -2 V
95 18 V
96 -2 V
95 26 V
95 13 V
95 -4 V
95 19 V
96 8 V
95 18 V
95 -4 V
95 46 V
96 0 V
95 9 V
95 -17 V
95 -5 V
96 16 V
95 2 V
95 9 V
95 17 V
96 7 V
95 17 V
95 10 V
95 7 V
95 9 V
96 -8 V
95 6 V
95 16 V
378 348 CircleF
473 348 CircleF
568 353 CircleF
663 359 CircleF
758 365 CircleF
853 351 CircleF
948 351 CircleF
1043 350 CircleF
1139 350 CircleF
1234 352 CircleF
1329 356 CircleF
1424 352 CircleF
1519 353 CircleF
1615 366 CircleF
1710 356 CircleF
1805 363 CircleF
1900 365 CircleF
1995 362 CircleF
2091 373 CircleF
2186 370 CircleF
2281 382 CircleF
2376 379 CircleF
2471 381 CircleF
2567 381 CircleF
2662 377 CircleF
2757 375 CircleF
2852 393 CircleF
2948 391 CircleF
3043 417 CircleF
3138 430 CircleF
3233 426 CircleF
3328 445 CircleF
3424 453 CircleF
3519 471 CircleF
3614 467 CircleF
3709 513 CircleF
3805 513 CircleF
3900 522 CircleF
3995 505 CircleF
4090 500 CircleF
4186 516 CircleF
4281 518 CircleF
4376 527 CircleF
4471 544 CircleF
4567 551 CircleF
4662 568 CircleF
4757 578 CircleF
4852 585 CircleF
4947 594 CircleF
5043 586 CircleF
5138 592 CircleF
5233 608 CircleF
6595 4318 CircleF
% End plot #4
% Begin plot #5
0.500 UP
1.000 UL
LT4
0.00 0.55 0.55 C LCb setrgbcolor
6328 4178 M
(Boost Binomial Queue) Rshow
LT4
0.00 0.55 0.55 C 6412 4178 M
367 0 V
378 935 M
95 18 V
95 16 V
95 15 V
95 16 V
95 11 V
95 13 V
95 18 V
96 19 V
95 16 V
95 14 V
95 15 V
95 26 V
96 21 V
95 14 V
95 20 V
95 18 V
95 27 V
96 27 V
95 26 V
95 12 V
95 19 V
95 30 V
96 28 V
95 22 V
95 25 V
95 27 V
96 40 V
95 -8 V
95 45 V
95 48 V
95 46 V
96 54 V
95 59 V
95 1 V
95 47 V
96 53 V
95 130 V
95 72 V
95 -3 V
96 68 V
95 43 V
95 -1 V
95 65 V
96 67 V
95 9 V
95 77 V
95 200 V
95 73 V
96 10 V
95 100 V
95 258 V
378 935 Circle
473 953 Circle
568 969 Circle
663 984 Circle
758 1000 Circle
853 1011 Circle
948 1024 Circle
1043 1042 Circle
1139 1061 Circle
1234 1077 Circle
1329 1091 Circle
1424 1106 Circle
1519 1132 Circle
1615 1153 Circle
1710 1167 Circle
1805 1187 Circle
1900 1205 Circle
1995 1232 Circle
2091 1259 Circle
2186 1285 Circle
2281 1297 Circle
2376 1316 Circle
2471 1346 Circle
2567 1374 Circle
2662 1396 Circle
2757 1421 Circle
2852 1448 Circle
2948 1488 Circle
3043 1480 Circle
3138 1525 Circle
3233 1573 Circle
3328 1619 Circle
3424 1673 Circle
3519 1732 Circle
3614 1733 Circle
3709 1780 Circle
3805 1833 Circle
3900 1963 Circle
3995 2035 Circle
4090 2032 Circle
4186 2100 Circle
4281 2143 Circle
4376 2142 Circle
4471 2207 Circle
4567 2274 Circle
4662 2283 Circle
4757 2360 Circle
4852 2560 Circle
4947 2633 Circle
5043 2643 Circle
5138 2743 Circle
5233 3001 Circle
6595 4178 Circle
% End plot #5
% Begin plot #6
0.500 UP
1.000 UL
LT5
0.85 0.65 0.13 C LCb setrgbcolor
6328 4038 M
(Boost Fibonacci Heap) Rshow
LT5
0.85 0.65 0.13 C 6412 4038 M
367 0 V
378 371 M
95 2 V
95 -3 V
95 0 V
95 3 V
95 3 V
95 0 V
95 -3 V
96 2 V
95 1 V
95 1 V
95 1 V
95 2 V
96 1 V
95 3 V
95 0 V
95 4 V
95 -1 V
96 0 V
95 1 V
95 1 V
95 1 V
95 0 V
96 1 V
95 2 V
95 3 V
95 10 V
96 6 V
95 5 V
95 9 V
95 15 V
95 13 V
96 12 V
95 10 V
95 12 V
95 10 V
96 8 V
95 7 V
95 8 V
95 19 V
96 6 V
95 6 V
95 5 V
95 5 V
96 1 V
95 1 V
95 4 V
95 0 V
95 -2 V
96 4 V
95 4 V
95 -2 V
378 371 BoxF
473 373 BoxF
568 370 BoxF
663 370 BoxF
758 373 BoxF
853 376 BoxF
948 376 BoxF
1043 373 BoxF
1139 375 BoxF
1234 376 BoxF
1329 377 BoxF
1424 378 BoxF
1519 380 BoxF
1615 381 BoxF
1710 384 BoxF
1805 384 BoxF
1900 388 BoxF
1995 387 BoxF
2091 387 BoxF
2186 388 BoxF
2281 389 BoxF
2376 390 BoxF
2471 390 BoxF
2567 391 BoxF
2662 393 BoxF
2757 396 BoxF
2852 406 BoxF
2948 412 BoxF
3043 417 BoxF
3138 426 BoxF
3233 441 BoxF
3328 454 BoxF
3424 466 BoxF
3519 476 BoxF
3614 488 BoxF
3709 498 BoxF
3805 506 BoxF
3900 513 BoxF
3995 521 BoxF
4090 540 BoxF
4186 546 BoxF
4281 552 BoxF
4376 557 BoxF
4471 562 BoxF
4567 563 BoxF
4662 564 BoxF
4757 568 BoxF
4852 568 BoxF
4947 566 BoxF
5043 570 BoxF
5138 574 BoxF
5233 572 BoxF
6595 4038 BoxF
% End plot #6
1.000 UL
LTb
LCb setrgbcolor
378 4871 N
378 280 L
6569 0 V
0 4591 V
-6569 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
